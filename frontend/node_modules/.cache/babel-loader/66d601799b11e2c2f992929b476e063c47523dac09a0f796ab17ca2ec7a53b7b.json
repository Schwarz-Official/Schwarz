{"ast":null,"code":"'use strict';\n\nconst path = require('path');\nconst win32 = process.platform === 'win32';\nconst {\n  REGEX_BACKSLASH,\n  REGEX_REMOVE_BACKSLASH,\n  REGEX_SPECIAL_CHARS,\n  REGEX_SPECIAL_CHARS_GLOBAL\n} = require('./constants');\nexports.isObject = val => val !== null && typeof val === 'object' && !Array.isArray(val);\nexports.hasRegexChars = str => REGEX_SPECIAL_CHARS.test(str);\nexports.isRegexChar = str => str.length === 1 && exports.hasRegexChars(str);\nexports.escapeRegex = str => str.replace(REGEX_SPECIAL_CHARS_GLOBAL, '\\\\$1');\nexports.toPosixSlashes = str => str.replace(REGEX_BACKSLASH, '/');\nexports.removeBackslashes = str => {\n  return str.replace(REGEX_REMOVE_BACKSLASH, match => {\n    return match === '\\\\' ? '' : match;\n  });\n};\nexports.supportsLookbehinds = () => {\n  const segs = process.version.slice(1).split('.').map(Number);\n  if (segs.length === 3 && segs[0] >= 9 || segs[0] === 8 && segs[1] >= 10) {\n    return true;\n  }\n  return false;\n};\nexports.isWindows = options => {\n  if (options && typeof options.windows === 'boolean') {\n    return options.windows;\n  }\n  return win32 === true || path.sep === '\\\\';\n};\nexports.escapeLast = (input, char, lastIdx) => {\n  const idx = input.lastIndexOf(char, lastIdx);\n  if (idx === -1) return input;\n  if (input[idx - 1] === '\\\\') return exports.escapeLast(input, char, idx - 1);\n  return `${input.slice(0, idx)}\\\\${input.slice(idx)}`;\n};\nexports.removePrefix = (input, state = {}) => {\n  let output = input;\n  if (output.startsWith('./')) {\n    output = output.slice(2);\n    state.prefix = './';\n  }\n  return output;\n};\nexports.wrapOutput = (input, state = {}, options = {}) => {\n  const prepend = options.contains ? '' : '^';\n  const append = options.contains ? '' : '$';\n  let output = `${prepend}(?:${input})${append}`;\n  if (state.negated === true) {\n    output = `(?:^(?!${output}).*$)`;\n  }\n  return output;\n};","map":{"version":3,"names":["path","require","win32","process","platform","REGEX_BACKSLASH","REGEX_REMOVE_BACKSLASH","REGEX_SPECIAL_CHARS","REGEX_SPECIAL_CHARS_GLOBAL","exports","isObject","val","Array","isArray","hasRegexChars","str","test","isRegexChar","length","escapeRegex","replace","toPosixSlashes","removeBackslashes","match","supportsLookbehinds","segs","version","slice","split","map","Number","isWindows","options","windows","sep","escapeLast","input","char","lastIdx","idx","lastIndexOf","removePrefix","state","output","startsWith","prefix","wrapOutput","prepend","contains","append","negated"],"sources":["D:/WEB-PROJECT/Schwarz/frontend/node_modules/picomatch/lib/utils.js"],"sourcesContent":["'use strict';\n\nconst path = require('path');\nconst win32 = process.platform === 'win32';\nconst {\n  REGEX_BACKSLASH,\n  REGEX_REMOVE_BACKSLASH,\n  REGEX_SPECIAL_CHARS,\n  REGEX_SPECIAL_CHARS_GLOBAL\n} = require('./constants');\n\nexports.isObject = val => val !== null && typeof val === 'object' && !Array.isArray(val);\nexports.hasRegexChars = str => REGEX_SPECIAL_CHARS.test(str);\nexports.isRegexChar = str => str.length === 1 && exports.hasRegexChars(str);\nexports.escapeRegex = str => str.replace(REGEX_SPECIAL_CHARS_GLOBAL, '\\\\$1');\nexports.toPosixSlashes = str => str.replace(REGEX_BACKSLASH, '/');\n\nexports.removeBackslashes = str => {\n  return str.replace(REGEX_REMOVE_BACKSLASH, match => {\n    return match === '\\\\' ? '' : match;\n  });\n};\n\nexports.supportsLookbehinds = () => {\n  const segs = process.version.slice(1).split('.').map(Number);\n  if (segs.length === 3 && segs[0] >= 9 || (segs[0] === 8 && segs[1] >= 10)) {\n    return true;\n  }\n  return false;\n};\n\nexports.isWindows = options => {\n  if (options && typeof options.windows === 'boolean') {\n    return options.windows;\n  }\n  return win32 === true || path.sep === '\\\\';\n};\n\nexports.escapeLast = (input, char, lastIdx) => {\n  const idx = input.lastIndexOf(char, lastIdx);\n  if (idx === -1) return input;\n  if (input[idx - 1] === '\\\\') return exports.escapeLast(input, char, idx - 1);\n  return `${input.slice(0, idx)}\\\\${input.slice(idx)}`;\n};\n\nexports.removePrefix = (input, state = {}) => {\n  let output = input;\n  if (output.startsWith('./')) {\n    output = output.slice(2);\n    state.prefix = './';\n  }\n  return output;\n};\n\nexports.wrapOutput = (input, state = {}, options = {}) => {\n  const prepend = options.contains ? '' : '^';\n  const append = options.contains ? '' : '$';\n\n  let output = `${prepend}(?:${input})${append}`;\n  if (state.negated === true) {\n    output = `(?:^(?!${output}).*$)`;\n  }\n  return output;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}