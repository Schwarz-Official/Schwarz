{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"default\", {\n  enumerable: true,\n  get: function () {\n    return expandApplyAtRules;\n  }\n});\nfunction partitionRules(root) {\n  if (!root.walkAtRules) return;\n  let applyParents = new Set();\n  root.walkAtRules(\"apply\", rule => {\n    applyParents.add(rule.parent);\n  });\n  if (applyParents.size === 0) {\n    return;\n  }\n  for (let rule of applyParents) {\n    let nodeGroups = [];\n    let lastGroup = [];\n    for (let node of rule.nodes) {\n      if (node.type === \"atrule\" && node.name === \"apply\") {\n        if (lastGroup.length > 0) {\n          nodeGroups.push(lastGroup);\n          lastGroup = [];\n        }\n        nodeGroups.push([node]);\n      } else {\n        lastGroup.push(node);\n      }\n    }\n    if (lastGroup.length > 0) {\n      nodeGroups.push(lastGroup);\n    }\n    if (nodeGroups.length === 1) {\n      continue;\n    }\n    for (let group of [...nodeGroups].reverse()) {\n      let clone = rule.clone({\n        nodes: []\n      });\n      clone.append(group);\n      rule.after(clone);\n    }\n    rule.remove();\n  }\n}\nfunction expandApplyAtRules() {\n  return root => {\n    partitionRules(root);\n  };\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","enumerable","get","expandApplyAtRules","partitionRules","root","walkAtRules","applyParents","Set","rule","add","parent","size","nodeGroups","lastGroup","node","nodes","type","name","length","push","group","reverse","clone","append","after","remove"],"sources":["D:/WEB-PROJECT/Schwarz/frontend/node_modules/tailwindcss/lib/lib/partitionApplyAtRules.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nObject.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function() {\n        return expandApplyAtRules;\n    }\n});\nfunction partitionRules(root) {\n    if (!root.walkAtRules) return;\n    let applyParents = new Set();\n    root.walkAtRules(\"apply\", (rule)=>{\n        applyParents.add(rule.parent);\n    });\n    if (applyParents.size === 0) {\n        return;\n    }\n    for (let rule of applyParents){\n        let nodeGroups = [];\n        let lastGroup = [];\n        for (let node of rule.nodes){\n            if (node.type === \"atrule\" && node.name === \"apply\") {\n                if (lastGroup.length > 0) {\n                    nodeGroups.push(lastGroup);\n                    lastGroup = [];\n                }\n                nodeGroups.push([\n                    node\n                ]);\n            } else {\n                lastGroup.push(node);\n            }\n        }\n        if (lastGroup.length > 0) {\n            nodeGroups.push(lastGroup);\n        }\n        if (nodeGroups.length === 1) {\n            continue;\n        }\n        for (let group of [\n            ...nodeGroups\n        ].reverse()){\n            let clone = rule.clone({\n                nodes: []\n            });\n            clone.append(group);\n            rule.after(clone);\n        }\n        rule.remove();\n    }\n}\nfunction expandApplyAtRules() {\n    return (root)=>{\n        partitionRules(root);\n    };\n}\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EACzCC,KAAK,EAAE;AACX,CAAC,CAAC;AACFH,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,SAAS,EAAE;EACtCE,UAAU,EAAE,IAAI;EAChBC,GAAG,EAAE,SAAAA,CAAA,EAAW;IACZ,OAAOC,kBAAkB;EAC7B;AACJ,CAAC,CAAC;AACF,SAASC,cAAcA,CAACC,IAAI,EAAE;EAC1B,IAAI,CAACA,IAAI,CAACC,WAAW,EAAE;EACvB,IAAIC,YAAY,GAAG,IAAIC,GAAG,CAAC,CAAC;EAC5BH,IAAI,CAACC,WAAW,CAAC,OAAO,EAAGG,IAAI,IAAG;IAC9BF,YAAY,CAACG,GAAG,CAACD,IAAI,CAACE,MAAM,CAAC;EACjC,CAAC,CAAC;EACF,IAAIJ,YAAY,CAACK,IAAI,KAAK,CAAC,EAAE;IACzB;EACJ;EACA,KAAK,IAAIH,IAAI,IAAIF,YAAY,EAAC;IAC1B,IAAIM,UAAU,GAAG,EAAE;IACnB,IAAIC,SAAS,GAAG,EAAE;IAClB,KAAK,IAAIC,IAAI,IAAIN,IAAI,CAACO,KAAK,EAAC;MACxB,IAAID,IAAI,CAACE,IAAI,KAAK,QAAQ,IAAIF,IAAI,CAACG,IAAI,KAAK,OAAO,EAAE;QACjD,IAAIJ,SAAS,CAACK,MAAM,GAAG,CAAC,EAAE;UACtBN,UAAU,CAACO,IAAI,CAACN,SAAS,CAAC;UAC1BA,SAAS,GAAG,EAAE;QAClB;QACAD,UAAU,CAACO,IAAI,CAAC,CACZL,IAAI,CACP,CAAC;MACN,CAAC,MAAM;QACHD,SAAS,CAACM,IAAI,CAACL,IAAI,CAAC;MACxB;IACJ;IACA,IAAID,SAAS,CAACK,MAAM,GAAG,CAAC,EAAE;MACtBN,UAAU,CAACO,IAAI,CAACN,SAAS,CAAC;IAC9B;IACA,IAAID,UAAU,CAACM,MAAM,KAAK,CAAC,EAAE;MACzB;IACJ;IACA,KAAK,IAAIE,KAAK,IAAI,CACd,GAAGR,UAAU,CAChB,CAACS,OAAO,CAAC,CAAC,EAAC;MACR,IAAIC,KAAK,GAAGd,IAAI,CAACc,KAAK,CAAC;QACnBP,KAAK,EAAE;MACX,CAAC,CAAC;MACFO,KAAK,CAACC,MAAM,CAACH,KAAK,CAAC;MACnBZ,IAAI,CAACgB,KAAK,CAACF,KAAK,CAAC;IACrB;IACAd,IAAI,CAACiB,MAAM,CAAC,CAAC;EACjB;AACJ;AACA,SAASvB,kBAAkBA,CAAA,EAAG;EAC1B,OAAQE,IAAI,IAAG;IACXD,cAAc,CAACC,IAAI,CAAC;EACxB,CAAC;AACL"},"metadata":{},"sourceType":"script","externalDependencies":[]}