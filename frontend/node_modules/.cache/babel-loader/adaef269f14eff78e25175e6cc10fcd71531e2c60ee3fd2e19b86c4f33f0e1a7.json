{"ast":null,"code":"export default function getJSXPragmaInfo(options) {\n  const [base, suffix] = splitPragma(options.jsxPragma || \"React.createElement\");\n  const [fragmentBase, fragmentSuffix] = splitPragma(options.jsxFragmentPragma || \"React.Fragment\");\n  return {\n    base,\n    suffix,\n    fragmentBase,\n    fragmentSuffix\n  };\n}\nfunction splitPragma(pragma) {\n  let dotIndex = pragma.indexOf(\".\");\n  if (dotIndex === -1) {\n    dotIndex = pragma.length;\n  }\n  return [pragma.slice(0, dotIndex), pragma.slice(dotIndex)];\n}","map":{"version":3,"names":["getJSXPragmaInfo","options","base","suffix","splitPragma","jsxPragma","fragmentBase","fragmentSuffix","jsxFragmentPragma","pragma","dotIndex","indexOf","length","slice"],"sources":["D:/WEB-PROJECT/Schwarz/frontend/node_modules/sucrase/dist/esm/util/getJSXPragmaInfo.js"],"sourcesContent":["\n\n\n\n\n\n\n\n\nexport default function getJSXPragmaInfo(options) {\n  const [base, suffix] = splitPragma(options.jsxPragma || \"React.createElement\");\n  const [fragmentBase, fragmentSuffix] = splitPragma(options.jsxFragmentPragma || \"React.Fragment\");\n  return {base, suffix, fragmentBase, fragmentSuffix};\n}\n\nfunction splitPragma(pragma) {\n  let dotIndex = pragma.indexOf(\".\");\n  if (dotIndex === -1) {\n    dotIndex = pragma.length;\n  }\n  return [pragma.slice(0, dotIndex), pragma.slice(dotIndex)];\n}\n"],"mappings":"AASA,eAAe,SAASA,gBAAgBA,CAACC,OAAO,EAAE;EAChD,MAAM,CAACC,IAAI,EAAEC,MAAM,CAAC,GAAGC,WAAW,CAACH,OAAO,CAACI,SAAS,IAAI,qBAAqB,CAAC;EAC9E,MAAM,CAACC,YAAY,EAAEC,cAAc,CAAC,GAAGH,WAAW,CAACH,OAAO,CAACO,iBAAiB,IAAI,gBAAgB,CAAC;EACjG,OAAO;IAACN,IAAI;IAAEC,MAAM;IAAEG,YAAY;IAAEC;EAAc,CAAC;AACrD;AAEA,SAASH,WAAWA,CAACK,MAAM,EAAE;EAC3B,IAAIC,QAAQ,GAAGD,MAAM,CAACE,OAAO,CAAC,GAAG,CAAC;EAClC,IAAID,QAAQ,KAAK,CAAC,CAAC,EAAE;IACnBA,QAAQ,GAAGD,MAAM,CAACG,MAAM;EAC1B;EACA,OAAO,CAACH,MAAM,CAACI,KAAK,CAAC,CAAC,EAAEH,QAAQ,CAAC,EAAED,MAAM,CAACI,KAAK,CAACH,QAAQ,CAAC,CAAC;AAC5D"},"metadata":{},"sourceType":"module","externalDependencies":[]}