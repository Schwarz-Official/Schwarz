{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"validateConfig\", {\n  enumerable: true,\n  get: function () {\n    return validateConfig;\n  }\n});\nconst _log = /*#__PURE__*/_interop_require_default(require(\"./log\"));\nfunction _interop_require_default(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction validateConfig(config) {\n  if (config.content.files.length === 0) {\n    _log.default.warn(\"content-problems\", [\"The `content` option in your Tailwind CSS configuration is missing or empty.\", \"Configure your content sources or your generated CSS will be missing styles.\", \"https://tailwindcss.com/docs/content-configuration\"]);\n  }\n  // Warn if the line-clamp plugin is installed\n  try {\n    let plugin = require(\"@tailwindcss/line-clamp\");\n    if (config.plugins.includes(plugin)) {\n      _log.default.warn(\"line-clamp-in-core\", [\"As of Tailwind CSS v3.3, the `@tailwindcss/line-clamp` plugin is now included by default.\", \"Remove it from the `plugins` array in your configuration to eliminate this warning.\"]);\n      config.plugins = config.plugins.filter(p => p !== plugin);\n    }\n  } catch {}\n  return config;\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","enumerable","get","validateConfig","_log","_interop_require_default","require","obj","__esModule","default","config","content","files","length","warn","plugin","plugins","includes","filter","p"],"sources":["D:/WEB-PROJECT/Schwarz/frontend/node_modules/tailwindcss/lib/util/validateConfig.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nObject.defineProperty(exports, \"validateConfig\", {\n    enumerable: true,\n    get: function() {\n        return validateConfig;\n    }\n});\nconst _log = /*#__PURE__*/ _interop_require_default(require(\"./log\"));\nfunction _interop_require_default(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\nfunction validateConfig(config) {\n    if (config.content.files.length === 0) {\n        _log.default.warn(\"content-problems\", [\n            \"The `content` option in your Tailwind CSS configuration is missing or empty.\",\n            \"Configure your content sources or your generated CSS will be missing styles.\",\n            \"https://tailwindcss.com/docs/content-configuration\"\n        ]);\n    }\n    // Warn if the line-clamp plugin is installed\n    try {\n        let plugin = require(\"@tailwindcss/line-clamp\");\n        if (config.plugins.includes(plugin)) {\n            _log.default.warn(\"line-clamp-in-core\", [\n                \"As of Tailwind CSS v3.3, the `@tailwindcss/line-clamp` plugin is now included by default.\",\n                \"Remove it from the `plugins` array in your configuration to eliminate this warning.\"\n            ]);\n            config.plugins = config.plugins.filter((p)=>p !== plugin);\n        }\n    } catch  {}\n    return config;\n}\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EACzCC,KAAK,EAAE;AACX,CAAC,CAAC;AACFH,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,gBAAgB,EAAE;EAC7CE,UAAU,EAAE,IAAI;EAChBC,GAAG,EAAE,SAAAA,CAAA,EAAW;IACZ,OAAOC,cAAc;EACzB;AACJ,CAAC,CAAC;AACF,MAAMC,IAAI,GAAG,aAAcC,wBAAwB,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC;AACrE,SAASD,wBAAwBA,CAACE,GAAG,EAAE;EACnC,OAAOA,GAAG,IAAIA,GAAG,CAACC,UAAU,GAAGD,GAAG,GAAG;IACjCE,OAAO,EAAEF;EACb,CAAC;AACL;AACA,SAASJ,cAAcA,CAACO,MAAM,EAAE;EAC5B,IAAIA,MAAM,CAACC,OAAO,CAACC,KAAK,CAACC,MAAM,KAAK,CAAC,EAAE;IACnCT,IAAI,CAACK,OAAO,CAACK,IAAI,CAAC,kBAAkB,EAAE,CAClC,8EAA8E,EAC9E,8EAA8E,EAC9E,oDAAoD,CACvD,CAAC;EACN;EACA;EACA,IAAI;IACA,IAAIC,MAAM,GAAGT,OAAO,CAAC,yBAAyB,CAAC;IAC/C,IAAII,MAAM,CAACM,OAAO,CAACC,QAAQ,CAACF,MAAM,CAAC,EAAE;MACjCX,IAAI,CAACK,OAAO,CAACK,IAAI,CAAC,oBAAoB,EAAE,CACpC,2FAA2F,EAC3F,qFAAqF,CACxF,CAAC;MACFJ,MAAM,CAACM,OAAO,GAAGN,MAAM,CAACM,OAAO,CAACE,MAAM,CAAEC,CAAC,IAAGA,CAAC,KAAKJ,MAAM,CAAC;IAC7D;EACJ,CAAC,CAAC,MAAO,CAAC;EACV,OAAOL,MAAM;AACjB"},"metadata":{},"sourceType":"script","externalDependencies":[]}