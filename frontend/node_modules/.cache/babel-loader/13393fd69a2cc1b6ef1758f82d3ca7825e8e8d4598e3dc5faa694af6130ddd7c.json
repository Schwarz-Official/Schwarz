{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst events_1 = require(\"events\");\nconst fsScandir = require(\"@nodelib/fs.scandir\");\nconst fastq = require(\"fastq\");\nconst common = require(\"./common\");\nconst reader_1 = require(\"./reader\");\nclass AsyncReader extends reader_1.default {\n  constructor(_root, _settings) {\n    super(_root, _settings);\n    this._settings = _settings;\n    this._scandir = fsScandir.scandir;\n    this._emitter = new events_1.EventEmitter();\n    this._queue = fastq(this._worker.bind(this), this._settings.concurrency);\n    this._isFatalError = false;\n    this._isDestroyed = false;\n    this._queue.drain = () => {\n      if (!this._isFatalError) {\n        this._emitter.emit('end');\n      }\n    };\n  }\n  read() {\n    this._isFatalError = false;\n    this._isDestroyed = false;\n    setImmediate(() => {\n      this._pushToQueue(this._root, this._settings.basePath);\n    });\n    return this._emitter;\n  }\n  get isDestroyed() {\n    return this._isDestroyed;\n  }\n  destroy() {\n    if (this._isDestroyed) {\n      throw new Error('The reader is already destroyed');\n    }\n    this._isDestroyed = true;\n    this._queue.killAndDrain();\n  }\n  onEntry(callback) {\n    this._emitter.on('entry', callback);\n  }\n  onError(callback) {\n    this._emitter.once('error', callback);\n  }\n  onEnd(callback) {\n    this._emitter.once('end', callback);\n  }\n  _pushToQueue(directory, base) {\n    const queueItem = {\n      directory,\n      base\n    };\n    this._queue.push(queueItem, error => {\n      if (error !== null) {\n        this._handleError(error);\n      }\n    });\n  }\n  _worker(item, done) {\n    this._scandir(item.directory, this._settings.fsScandirSettings, (error, entries) => {\n      if (error !== null) {\n        done(error, undefined);\n        return;\n      }\n      for (const entry of entries) {\n        this._handleEntry(entry, item.base);\n      }\n      done(null, undefined);\n    });\n  }\n  _handleError(error) {\n    if (this._isDestroyed || !common.isFatalError(this._settings, error)) {\n      return;\n    }\n    this._isFatalError = true;\n    this._isDestroyed = true;\n    this._emitter.emit('error', error);\n  }\n  _handleEntry(entry, base) {\n    if (this._isDestroyed || this._isFatalError) {\n      return;\n    }\n    const fullpath = entry.path;\n    if (base !== undefined) {\n      entry.path = common.joinPathSegments(base, entry.name, this._settings.pathSegmentSeparator);\n    }\n    if (common.isAppliedFilter(this._settings.entryFilter, entry)) {\n      this._emitEntry(entry);\n    }\n    if (entry.dirent.isDirectory() && common.isAppliedFilter(this._settings.deepFilter, entry)) {\n      this._pushToQueue(fullpath, base === undefined ? undefined : entry.path);\n    }\n  }\n  _emitEntry(entry) {\n    this._emitter.emit('entry', entry);\n  }\n}\nexports.default = AsyncReader;","map":{"version":3,"names":["Object","defineProperty","exports","value","events_1","require","fsScandir","fastq","common","reader_1","AsyncReader","default","constructor","_root","_settings","_scandir","scandir","_emitter","EventEmitter","_queue","_worker","bind","concurrency","_isFatalError","_isDestroyed","drain","emit","read","setImmediate","_pushToQueue","basePath","isDestroyed","destroy","Error","killAndDrain","onEntry","callback","on","onError","once","onEnd","directory","base","queueItem","push","error","_handleError","item","done","fsScandirSettings","entries","undefined","entry","_handleEntry","isFatalError","fullpath","path","joinPathSegments","name","pathSegmentSeparator","isAppliedFilter","entryFilter","_emitEntry","dirent","isDirectory","deepFilter"],"sources":["D:/WEB-PROJECT/Schwarz/frontend/node_modules/@nodelib/fs.walk/out/readers/async.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst events_1 = require(\"events\");\nconst fsScandir = require(\"@nodelib/fs.scandir\");\nconst fastq = require(\"fastq\");\nconst common = require(\"./common\");\nconst reader_1 = require(\"./reader\");\nclass AsyncReader extends reader_1.default {\n    constructor(_root, _settings) {\n        super(_root, _settings);\n        this._settings = _settings;\n        this._scandir = fsScandir.scandir;\n        this._emitter = new events_1.EventEmitter();\n        this._queue = fastq(this._worker.bind(this), this._settings.concurrency);\n        this._isFatalError = false;\n        this._isDestroyed = false;\n        this._queue.drain = () => {\n            if (!this._isFatalError) {\n                this._emitter.emit('end');\n            }\n        };\n    }\n    read() {\n        this._isFatalError = false;\n        this._isDestroyed = false;\n        setImmediate(() => {\n            this._pushToQueue(this._root, this._settings.basePath);\n        });\n        return this._emitter;\n    }\n    get isDestroyed() {\n        return this._isDestroyed;\n    }\n    destroy() {\n        if (this._isDestroyed) {\n            throw new Error('The reader is already destroyed');\n        }\n        this._isDestroyed = true;\n        this._queue.killAndDrain();\n    }\n    onEntry(callback) {\n        this._emitter.on('entry', callback);\n    }\n    onError(callback) {\n        this._emitter.once('error', callback);\n    }\n    onEnd(callback) {\n        this._emitter.once('end', callback);\n    }\n    _pushToQueue(directory, base) {\n        const queueItem = { directory, base };\n        this._queue.push(queueItem, (error) => {\n            if (error !== null) {\n                this._handleError(error);\n            }\n        });\n    }\n    _worker(item, done) {\n        this._scandir(item.directory, this._settings.fsScandirSettings, (error, entries) => {\n            if (error !== null) {\n                done(error, undefined);\n                return;\n            }\n            for (const entry of entries) {\n                this._handleEntry(entry, item.base);\n            }\n            done(null, undefined);\n        });\n    }\n    _handleError(error) {\n        if (this._isDestroyed || !common.isFatalError(this._settings, error)) {\n            return;\n        }\n        this._isFatalError = true;\n        this._isDestroyed = true;\n        this._emitter.emit('error', error);\n    }\n    _handleEntry(entry, base) {\n        if (this._isDestroyed || this._isFatalError) {\n            return;\n        }\n        const fullpath = entry.path;\n        if (base !== undefined) {\n            entry.path = common.joinPathSegments(base, entry.name, this._settings.pathSegmentSeparator);\n        }\n        if (common.isAppliedFilter(this._settings.entryFilter, entry)) {\n            this._emitEntry(entry);\n        }\n        if (entry.dirent.isDirectory() && common.isAppliedFilter(this._settings.deepFilter, entry)) {\n            this._pushToQueue(fullpath, base === undefined ? undefined : entry.path);\n        }\n    }\n    _emitEntry(entry) {\n        this._emitter.emit('entry', entry);\n    }\n}\nexports.default = AsyncReader;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}