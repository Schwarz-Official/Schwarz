{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.convertPosixPathToPattern = exports.convertWindowsPathToPattern = exports.convertPathToPattern = exports.escapePosixPath = exports.escapeWindowsPath = exports.escape = exports.removeLeadingDotSegment = exports.makeAbsolute = exports.unixify = void 0;\nconst os = require(\"os\");\nconst path = require(\"path\");\nconst IS_WINDOWS_PLATFORM = os.platform() === 'win32';\nconst LEADING_DOT_SEGMENT_CHARACTERS_COUNT = 2; // ./ or .\\\\\n/**\n * All non-escaped special characters.\n * Posix: ()*?[\\]{|}, !+@ before (, ! at the beginning, \\\\ before non-special characters.\n * Windows: (){}, !+@ before (, ! at the beginning.\n */\nconst POSIX_UNESCAPED_GLOB_SYMBOLS_RE = /(\\\\?)([()*?[\\]{|}]|^!|[!+@](?=\\()|\\\\(?![!()*+?@[\\]{|}]))/g;\nconst WINDOWS_UNESCAPED_GLOB_SYMBOLS_RE = /(\\\\?)([(){}]|^!|[!+@](?=\\())/g;\n/**\n * The device path (\\\\.\\ or \\\\?\\).\n * https://learn.microsoft.com/en-us/dotnet/standard/io/file-path-formats#dos-device-paths\n */\nconst DOS_DEVICE_PATH_RE = /^\\\\\\\\([.?])/;\n/**\n * All backslashes except those escaping special characters.\n * Windows: !()+@{}\n * https://learn.microsoft.com/en-us/windows/win32/fileio/naming-a-file#naming-conventions\n */\nconst WINDOWS_BACKSLASHES_RE = /\\\\(?![!()+@{}])/g;\n/**\n * Designed to work only with simple paths: `dir\\\\file`.\n */\nfunction unixify(filepath) {\n  return filepath.replace(/\\\\/g, '/');\n}\nexports.unixify = unixify;\nfunction makeAbsolute(cwd, filepath) {\n  return path.resolve(cwd, filepath);\n}\nexports.makeAbsolute = makeAbsolute;\nfunction removeLeadingDotSegment(entry) {\n  // We do not use `startsWith` because this is 10x slower than current implementation for some cases.\n  // eslint-disable-next-line @typescript-eslint/prefer-string-starts-ends-with\n  if (entry.charAt(0) === '.') {\n    const secondCharactery = entry.charAt(1);\n    if (secondCharactery === '/' || secondCharactery === '\\\\') {\n      return entry.slice(LEADING_DOT_SEGMENT_CHARACTERS_COUNT);\n    }\n  }\n  return entry;\n}\nexports.removeLeadingDotSegment = removeLeadingDotSegment;\nexports.escape = IS_WINDOWS_PLATFORM ? escapeWindowsPath : escapePosixPath;\nfunction escapeWindowsPath(pattern) {\n  return pattern.replace(WINDOWS_UNESCAPED_GLOB_SYMBOLS_RE, '\\\\$2');\n}\nexports.escapeWindowsPath = escapeWindowsPath;\nfunction escapePosixPath(pattern) {\n  return pattern.replace(POSIX_UNESCAPED_GLOB_SYMBOLS_RE, '\\\\$2');\n}\nexports.escapePosixPath = escapePosixPath;\nexports.convertPathToPattern = IS_WINDOWS_PLATFORM ? convertWindowsPathToPattern : convertPosixPathToPattern;\nfunction convertWindowsPathToPattern(filepath) {\n  return escapeWindowsPath(filepath).replace(DOS_DEVICE_PATH_RE, '//$1').replace(WINDOWS_BACKSLASHES_RE, '/');\n}\nexports.convertWindowsPathToPattern = convertWindowsPathToPattern;\nfunction convertPosixPathToPattern(filepath) {\n  return escapePosixPath(filepath);\n}\nexports.convertPosixPathToPattern = convertPosixPathToPattern;","map":{"version":3,"names":["Object","defineProperty","exports","value","convertPosixPathToPattern","convertWindowsPathToPattern","convertPathToPattern","escapePosixPath","escapeWindowsPath","escape","removeLeadingDotSegment","makeAbsolute","unixify","os","require","path","IS_WINDOWS_PLATFORM","platform","LEADING_DOT_SEGMENT_CHARACTERS_COUNT","POSIX_UNESCAPED_GLOB_SYMBOLS_RE","WINDOWS_UNESCAPED_GLOB_SYMBOLS_RE","DOS_DEVICE_PATH_RE","WINDOWS_BACKSLASHES_RE","filepath","replace","cwd","resolve","entry","charAt","secondCharactery","slice","pattern"],"sources":["D:/WEB-PROJECT/Schwarz/frontend/node_modules/fast-glob/out/utils/path.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.convertPosixPathToPattern = exports.convertWindowsPathToPattern = exports.convertPathToPattern = exports.escapePosixPath = exports.escapeWindowsPath = exports.escape = exports.removeLeadingDotSegment = exports.makeAbsolute = exports.unixify = void 0;\nconst os = require(\"os\");\nconst path = require(\"path\");\nconst IS_WINDOWS_PLATFORM = os.platform() === 'win32';\nconst LEADING_DOT_SEGMENT_CHARACTERS_COUNT = 2; // ./ or .\\\\\n/**\n * All non-escaped special characters.\n * Posix: ()*?[\\]{|}, !+@ before (, ! at the beginning, \\\\ before non-special characters.\n * Windows: (){}, !+@ before (, ! at the beginning.\n */\nconst POSIX_UNESCAPED_GLOB_SYMBOLS_RE = /(\\\\?)([()*?[\\]{|}]|^!|[!+@](?=\\()|\\\\(?![!()*+?@[\\]{|}]))/g;\nconst WINDOWS_UNESCAPED_GLOB_SYMBOLS_RE = /(\\\\?)([(){}]|^!|[!+@](?=\\())/g;\n/**\n * The device path (\\\\.\\ or \\\\?\\).\n * https://learn.microsoft.com/en-us/dotnet/standard/io/file-path-formats#dos-device-paths\n */\nconst DOS_DEVICE_PATH_RE = /^\\\\\\\\([.?])/;\n/**\n * All backslashes except those escaping special characters.\n * Windows: !()+@{}\n * https://learn.microsoft.com/en-us/windows/win32/fileio/naming-a-file#naming-conventions\n */\nconst WINDOWS_BACKSLASHES_RE = /\\\\(?![!()+@{}])/g;\n/**\n * Designed to work only with simple paths: `dir\\\\file`.\n */\nfunction unixify(filepath) {\n    return filepath.replace(/\\\\/g, '/');\n}\nexports.unixify = unixify;\nfunction makeAbsolute(cwd, filepath) {\n    return path.resolve(cwd, filepath);\n}\nexports.makeAbsolute = makeAbsolute;\nfunction removeLeadingDotSegment(entry) {\n    // We do not use `startsWith` because this is 10x slower than current implementation for some cases.\n    // eslint-disable-next-line @typescript-eslint/prefer-string-starts-ends-with\n    if (entry.charAt(0) === '.') {\n        const secondCharactery = entry.charAt(1);\n        if (secondCharactery === '/' || secondCharactery === '\\\\') {\n            return entry.slice(LEADING_DOT_SEGMENT_CHARACTERS_COUNT);\n        }\n    }\n    return entry;\n}\nexports.removeLeadingDotSegment = removeLeadingDotSegment;\nexports.escape = IS_WINDOWS_PLATFORM ? escapeWindowsPath : escapePosixPath;\nfunction escapeWindowsPath(pattern) {\n    return pattern.replace(WINDOWS_UNESCAPED_GLOB_SYMBOLS_RE, '\\\\$2');\n}\nexports.escapeWindowsPath = escapeWindowsPath;\nfunction escapePosixPath(pattern) {\n    return pattern.replace(POSIX_UNESCAPED_GLOB_SYMBOLS_RE, '\\\\$2');\n}\nexports.escapePosixPath = escapePosixPath;\nexports.convertPathToPattern = IS_WINDOWS_PLATFORM ? convertWindowsPathToPattern : convertPosixPathToPattern;\nfunction convertWindowsPathToPattern(filepath) {\n    return escapeWindowsPath(filepath)\n        .replace(DOS_DEVICE_PATH_RE, '//$1')\n        .replace(WINDOWS_BACKSLASHES_RE, '/');\n}\nexports.convertWindowsPathToPattern = convertWindowsPathToPattern;\nfunction convertPosixPathToPattern(filepath) {\n    return escapePosixPath(filepath);\n}\nexports.convertPosixPathToPattern = convertPosixPathToPattern;\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,yBAAyB,GAAGF,OAAO,CAACG,2BAA2B,GAAGH,OAAO,CAACI,oBAAoB,GAAGJ,OAAO,CAACK,eAAe,GAAGL,OAAO,CAACM,iBAAiB,GAAGN,OAAO,CAACO,MAAM,GAAGP,OAAO,CAACQ,uBAAuB,GAAGR,OAAO,CAACS,YAAY,GAAGT,OAAO,CAACU,OAAO,GAAG,KAAK,CAAC;AACjQ,MAAMC,EAAE,GAAGC,OAAO,CAAC,IAAI,CAAC;AACxB,MAAMC,IAAI,GAAGD,OAAO,CAAC,MAAM,CAAC;AAC5B,MAAME,mBAAmB,GAAGH,EAAE,CAACI,QAAQ,CAAC,CAAC,KAAK,OAAO;AACrD,MAAMC,oCAAoC,GAAG,CAAC,CAAC,CAAC;AAChD;AACA;AACA;AACA;AACA;AACA,MAAMC,+BAA+B,GAAG,2DAA2D;AACnG,MAAMC,iCAAiC,GAAG,+BAA+B;AACzE;AACA;AACA;AACA;AACA,MAAMC,kBAAkB,GAAG,aAAa;AACxC;AACA;AACA;AACA;AACA;AACA,MAAMC,sBAAsB,GAAG,kBAAkB;AACjD;AACA;AACA;AACA,SAASV,OAAOA,CAACW,QAAQ,EAAE;EACvB,OAAOA,QAAQ,CAACC,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC;AACvC;AACAtB,OAAO,CAACU,OAAO,GAAGA,OAAO;AACzB,SAASD,YAAYA,CAACc,GAAG,EAAEF,QAAQ,EAAE;EACjC,OAAOR,IAAI,CAACW,OAAO,CAACD,GAAG,EAAEF,QAAQ,CAAC;AACtC;AACArB,OAAO,CAACS,YAAY,GAAGA,YAAY;AACnC,SAASD,uBAAuBA,CAACiB,KAAK,EAAE;EACpC;EACA;EACA,IAAIA,KAAK,CAACC,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;IACzB,MAAMC,gBAAgB,GAAGF,KAAK,CAACC,MAAM,CAAC,CAAC,CAAC;IACxC,IAAIC,gBAAgB,KAAK,GAAG,IAAIA,gBAAgB,KAAK,IAAI,EAAE;MACvD,OAAOF,KAAK,CAACG,KAAK,CAACZ,oCAAoC,CAAC;IAC5D;EACJ;EACA,OAAOS,KAAK;AAChB;AACAzB,OAAO,CAACQ,uBAAuB,GAAGA,uBAAuB;AACzDR,OAAO,CAACO,MAAM,GAAGO,mBAAmB,GAAGR,iBAAiB,GAAGD,eAAe;AAC1E,SAASC,iBAAiBA,CAACuB,OAAO,EAAE;EAChC,OAAOA,OAAO,CAACP,OAAO,CAACJ,iCAAiC,EAAE,MAAM,CAAC;AACrE;AACAlB,OAAO,CAACM,iBAAiB,GAAGA,iBAAiB;AAC7C,SAASD,eAAeA,CAACwB,OAAO,EAAE;EAC9B,OAAOA,OAAO,CAACP,OAAO,CAACL,+BAA+B,EAAE,MAAM,CAAC;AACnE;AACAjB,OAAO,CAACK,eAAe,GAAGA,eAAe;AACzCL,OAAO,CAACI,oBAAoB,GAAGU,mBAAmB,GAAGX,2BAA2B,GAAGD,yBAAyB;AAC5G,SAASC,2BAA2BA,CAACkB,QAAQ,EAAE;EAC3C,OAAOf,iBAAiB,CAACe,QAAQ,CAAC,CAC7BC,OAAO,CAACH,kBAAkB,EAAE,MAAM,CAAC,CACnCG,OAAO,CAACF,sBAAsB,EAAE,GAAG,CAAC;AAC7C;AACApB,OAAO,CAACG,2BAA2B,GAAGA,2BAA2B;AACjE,SAASD,yBAAyBA,CAACmB,QAAQ,EAAE;EACzC,OAAOhB,eAAe,CAACgB,QAAQ,CAAC;AACpC;AACArB,OAAO,CAACE,yBAAyB,GAAGA,yBAAyB"},"metadata":{},"sourceType":"script","externalDependencies":[]}