{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst matcher_1 = require(\"./matcher\");\nclass PartialMatcher extends matcher_1.default {\n  match(filepath) {\n    const parts = filepath.split('/');\n    const levels = parts.length;\n    const patterns = this._storage.filter(info => !info.complete || info.segments.length > levels);\n    for (const pattern of patterns) {\n      const section = pattern.sections[0];\n      /**\n       * In this case, the pattern has a globstar and we must read all directories unconditionally,\n       * but only if the level has reached the end of the first group.\n       *\n       * fixtures/{a,b}/**\n       *  ^ true/false  ^ always true\n      */\n      if (!pattern.complete && levels > section.length) {\n        return true;\n      }\n      const match = parts.every((part, index) => {\n        const segment = pattern.segments[index];\n        if (segment.dynamic && segment.patternRe.test(part)) {\n          return true;\n        }\n        if (!segment.dynamic && segment.pattern === part) {\n          return true;\n        }\n        return false;\n      });\n      if (match) {\n        return true;\n      }\n    }\n    return false;\n  }\n}\nexports.default = PartialMatcher;","map":{"version":3,"names":["Object","defineProperty","exports","value","matcher_1","require","PartialMatcher","default","match","filepath","parts","split","levels","length","patterns","_storage","filter","info","complete","segments","pattern","section","sections","every","part","index","segment","dynamic","patternRe","test"],"sources":["D:/WEB-PROJECT/Schwarz/frontend/node_modules/fast-glob/out/providers/matchers/partial.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst matcher_1 = require(\"./matcher\");\nclass PartialMatcher extends matcher_1.default {\n    match(filepath) {\n        const parts = filepath.split('/');\n        const levels = parts.length;\n        const patterns = this._storage.filter((info) => !info.complete || info.segments.length > levels);\n        for (const pattern of patterns) {\n            const section = pattern.sections[0];\n            /**\n             * In this case, the pattern has a globstar and we must read all directories unconditionally,\n             * but only if the level has reached the end of the first group.\n             *\n             * fixtures/{a,b}/**\n             *  ^ true/false  ^ always true\n            */\n            if (!pattern.complete && levels > section.length) {\n                return true;\n            }\n            const match = parts.every((part, index) => {\n                const segment = pattern.segments[index];\n                if (segment.dynamic && segment.patternRe.test(part)) {\n                    return true;\n                }\n                if (!segment.dynamic && segment.pattern === part) {\n                    return true;\n                }\n                return false;\n            });\n            if (match) {\n                return true;\n            }\n        }\n        return false;\n    }\n}\nexports.default = PartialMatcher;\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7D,MAAMC,SAAS,GAAGC,OAAO,CAAC,WAAW,CAAC;AACtC,MAAMC,cAAc,SAASF,SAAS,CAACG,OAAO,CAAC;EAC3CC,KAAKA,CAACC,QAAQ,EAAE;IACZ,MAAMC,KAAK,GAAGD,QAAQ,CAACE,KAAK,CAAC,GAAG,CAAC;IACjC,MAAMC,MAAM,GAAGF,KAAK,CAACG,MAAM;IAC3B,MAAMC,QAAQ,GAAG,IAAI,CAACC,QAAQ,CAACC,MAAM,CAAEC,IAAI,IAAK,CAACA,IAAI,CAACC,QAAQ,IAAID,IAAI,CAACE,QAAQ,CAACN,MAAM,GAAGD,MAAM,CAAC;IAChG,KAAK,MAAMQ,OAAO,IAAIN,QAAQ,EAAE;MAC5B,MAAMO,OAAO,GAAGD,OAAO,CAACE,QAAQ,CAAC,CAAC,CAAC;MACnC;AACZ;AACA;AACA;AACA;AACA;AACA;MACY,IAAI,CAACF,OAAO,CAACF,QAAQ,IAAIN,MAAM,GAAGS,OAAO,CAACR,MAAM,EAAE;QAC9C,OAAO,IAAI;MACf;MACA,MAAML,KAAK,GAAGE,KAAK,CAACa,KAAK,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAK;QACvC,MAAMC,OAAO,GAAGN,OAAO,CAACD,QAAQ,CAACM,KAAK,CAAC;QACvC,IAAIC,OAAO,CAACC,OAAO,IAAID,OAAO,CAACE,SAAS,CAACC,IAAI,CAACL,IAAI,CAAC,EAAE;UACjD,OAAO,IAAI;QACf;QACA,IAAI,CAACE,OAAO,CAACC,OAAO,IAAID,OAAO,CAACN,OAAO,KAAKI,IAAI,EAAE;UAC9C,OAAO,IAAI;QACf;QACA,OAAO,KAAK;MAChB,CAAC,CAAC;MACF,IAAIhB,KAAK,EAAE;QACP,OAAO,IAAI;MACf;IACJ;IACA,OAAO,KAAK;EAChB;AACJ;AACAN,OAAO,CAACK,OAAO,GAAGD,cAAc"},"metadata":{},"sourceType":"script","externalDependencies":[]}