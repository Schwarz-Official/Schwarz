{"ast":null,"code":"/*!\n * is-glob <https://github.com/jonschlinkert/is-glob>\n *\n * Copyright (c) 2014-2017, Jon Schlinkert.\n * Released under the MIT License.\n */\n\nvar isExtglob = require('is-extglob');\nvar chars = {\n  '{': '}',\n  '(': ')',\n  '[': ']'\n};\nvar strictCheck = function (str) {\n  if (str[0] === '!') {\n    return true;\n  }\n  var index = 0;\n  var pipeIndex = -2;\n  var closeSquareIndex = -2;\n  var closeCurlyIndex = -2;\n  var closeParenIndex = -2;\n  var backSlashIndex = -2;\n  while (index < str.length) {\n    if (str[index] === '*') {\n      return true;\n    }\n    if (str[index + 1] === '?' && /[\\].+)]/.test(str[index])) {\n      return true;\n    }\n    if (closeSquareIndex !== -1 && str[index] === '[' && str[index + 1] !== ']') {\n      if (closeSquareIndex < index) {\n        closeSquareIndex = str.indexOf(']', index);\n      }\n      if (closeSquareIndex > index) {\n        if (backSlashIndex === -1 || backSlashIndex > closeSquareIndex) {\n          return true;\n        }\n        backSlashIndex = str.indexOf('\\\\', index);\n        if (backSlashIndex === -1 || backSlashIndex > closeSquareIndex) {\n          return true;\n        }\n      }\n    }\n    if (closeCurlyIndex !== -1 && str[index] === '{' && str[index + 1] !== '}') {\n      closeCurlyIndex = str.indexOf('}', index);\n      if (closeCurlyIndex > index) {\n        backSlashIndex = str.indexOf('\\\\', index);\n        if (backSlashIndex === -1 || backSlashIndex > closeCurlyIndex) {\n          return true;\n        }\n      }\n    }\n    if (closeParenIndex !== -1 && str[index] === '(' && str[index + 1] === '?' && /[:!=]/.test(str[index + 2]) && str[index + 3] !== ')') {\n      closeParenIndex = str.indexOf(')', index);\n      if (closeParenIndex > index) {\n        backSlashIndex = str.indexOf('\\\\', index);\n        if (backSlashIndex === -1 || backSlashIndex > closeParenIndex) {\n          return true;\n        }\n      }\n    }\n    if (pipeIndex !== -1 && str[index] === '(' && str[index + 1] !== '|') {\n      if (pipeIndex < index) {\n        pipeIndex = str.indexOf('|', index);\n      }\n      if (pipeIndex !== -1 && str[pipeIndex + 1] !== ')') {\n        closeParenIndex = str.indexOf(')', pipeIndex);\n        if (closeParenIndex > pipeIndex) {\n          backSlashIndex = str.indexOf('\\\\', pipeIndex);\n          if (backSlashIndex === -1 || backSlashIndex > closeParenIndex) {\n            return true;\n          }\n        }\n      }\n    }\n    if (str[index] === '\\\\') {\n      var open = str[index + 1];\n      index += 2;\n      var close = chars[open];\n      if (close) {\n        var n = str.indexOf(close, index);\n        if (n !== -1) {\n          index = n + 1;\n        }\n      }\n      if (str[index] === '!') {\n        return true;\n      }\n    } else {\n      index++;\n    }\n  }\n  return false;\n};\nvar relaxedCheck = function (str) {\n  if (str[0] === '!') {\n    return true;\n  }\n  var index = 0;\n  while (index < str.length) {\n    if (/[*?{}()[\\]]/.test(str[index])) {\n      return true;\n    }\n    if (str[index] === '\\\\') {\n      var open = str[index + 1];\n      index += 2;\n      var close = chars[open];\n      if (close) {\n        var n = str.indexOf(close, index);\n        if (n !== -1) {\n          index = n + 1;\n        }\n      }\n      if (str[index] === '!') {\n        return true;\n      }\n    } else {\n      index++;\n    }\n  }\n  return false;\n};\nmodule.exports = function isGlob(str, options) {\n  if (typeof str !== 'string' || str === '') {\n    return false;\n  }\n  if (isExtglob(str)) {\n    return true;\n  }\n  var check = strictCheck;\n\n  // optionally relax check\n  if (options && options.strict === false) {\n    check = relaxedCheck;\n  }\n  return check(str);\n};","map":{"version":3,"names":["isExtglob","require","chars","strictCheck","str","index","pipeIndex","closeSquareIndex","closeCurlyIndex","closeParenIndex","backSlashIndex","length","test","indexOf","open","close","n","relaxedCheck","module","exports","isGlob","options","check","strict"],"sources":["D:/WEB-PROJECT/Schwarz/frontend/node_modules/is-glob/index.js"],"sourcesContent":["/*!\n * is-glob <https://github.com/jonschlinkert/is-glob>\n *\n * Copyright (c) 2014-2017, Jon Schlinkert.\n * Released under the MIT License.\n */\n\nvar isExtglob = require('is-extglob');\nvar chars = { '{': '}', '(': ')', '[': ']'};\nvar strictCheck = function(str) {\n  if (str[0] === '!') {\n    return true;\n  }\n  var index = 0;\n  var pipeIndex = -2;\n  var closeSquareIndex = -2;\n  var closeCurlyIndex = -2;\n  var closeParenIndex = -2;\n  var backSlashIndex = -2;\n  while (index < str.length) {\n    if (str[index] === '*') {\n      return true;\n    }\n\n    if (str[index + 1] === '?' && /[\\].+)]/.test(str[index])) {\n      return true;\n    }\n\n    if (closeSquareIndex !== -1 && str[index] === '[' && str[index + 1] !== ']') {\n      if (closeSquareIndex < index) {\n        closeSquareIndex = str.indexOf(']', index);\n      }\n      if (closeSquareIndex > index) {\n        if (backSlashIndex === -1 || backSlashIndex > closeSquareIndex) {\n          return true;\n        }\n        backSlashIndex = str.indexOf('\\\\', index);\n        if (backSlashIndex === -1 || backSlashIndex > closeSquareIndex) {\n          return true;\n        }\n      }\n    }\n\n    if (closeCurlyIndex !== -1 && str[index] === '{' && str[index + 1] !== '}') {\n      closeCurlyIndex = str.indexOf('}', index);\n      if (closeCurlyIndex > index) {\n        backSlashIndex = str.indexOf('\\\\', index);\n        if (backSlashIndex === -1 || backSlashIndex > closeCurlyIndex) {\n          return true;\n        }\n      }\n    }\n\n    if (closeParenIndex !== -1 && str[index] === '(' && str[index + 1] === '?' && /[:!=]/.test(str[index + 2]) && str[index + 3] !== ')') {\n      closeParenIndex = str.indexOf(')', index);\n      if (closeParenIndex > index) {\n        backSlashIndex = str.indexOf('\\\\', index);\n        if (backSlashIndex === -1 || backSlashIndex > closeParenIndex) {\n          return true;\n        }\n      }\n    }\n\n    if (pipeIndex !== -1 && str[index] === '(' && str[index + 1] !== '|') {\n      if (pipeIndex < index) {\n        pipeIndex = str.indexOf('|', index);\n      }\n      if (pipeIndex !== -1 && str[pipeIndex + 1] !== ')') {\n        closeParenIndex = str.indexOf(')', pipeIndex);\n        if (closeParenIndex > pipeIndex) {\n          backSlashIndex = str.indexOf('\\\\', pipeIndex);\n          if (backSlashIndex === -1 || backSlashIndex > closeParenIndex) {\n            return true;\n          }\n        }\n      }\n    }\n\n    if (str[index] === '\\\\') {\n      var open = str[index + 1];\n      index += 2;\n      var close = chars[open];\n\n      if (close) {\n        var n = str.indexOf(close, index);\n        if (n !== -1) {\n          index = n + 1;\n        }\n      }\n\n      if (str[index] === '!') {\n        return true;\n      }\n    } else {\n      index++;\n    }\n  }\n  return false;\n};\n\nvar relaxedCheck = function(str) {\n  if (str[0] === '!') {\n    return true;\n  }\n  var index = 0;\n  while (index < str.length) {\n    if (/[*?{}()[\\]]/.test(str[index])) {\n      return true;\n    }\n\n    if (str[index] === '\\\\') {\n      var open = str[index + 1];\n      index += 2;\n      var close = chars[open];\n\n      if (close) {\n        var n = str.indexOf(close, index);\n        if (n !== -1) {\n          index = n + 1;\n        }\n      }\n\n      if (str[index] === '!') {\n        return true;\n      }\n    } else {\n      index++;\n    }\n  }\n  return false;\n};\n\nmodule.exports = function isGlob(str, options) {\n  if (typeof str !== 'string' || str === '') {\n    return false;\n  }\n\n  if (isExtglob(str)) {\n    return true;\n  }\n\n  var check = strictCheck;\n\n  // optionally relax check\n  if (options && options.strict === false) {\n    check = relaxedCheck;\n  }\n\n  return check(str);\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}