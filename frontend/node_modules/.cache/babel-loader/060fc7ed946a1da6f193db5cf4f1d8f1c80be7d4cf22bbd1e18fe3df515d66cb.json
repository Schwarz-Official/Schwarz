{"ast":null,"code":"import { TokenType as tt } from \"../parser/tokenizer/types\";\nexport default function elideImportEquals(tokens) {\n  // import\n  tokens.removeInitialToken();\n  // name\n  tokens.removeToken();\n  // =\n  tokens.removeToken();\n  // name or require\n  tokens.removeToken();\n  // Handle either `import A = require('A')` or `import A = B.C.D`.\n  if (tokens.matches1(tt.parenL)) {\n    // (\n    tokens.removeToken();\n    // path string\n    tokens.removeToken();\n    // )\n    tokens.removeToken();\n  } else {\n    while (tokens.matches1(tt.dot)) {\n      // .\n      tokens.removeToken();\n      // name\n      tokens.removeToken();\n    }\n  }\n}","map":{"version":3,"names":["TokenType","tt","elideImportEquals","tokens","removeInitialToken","removeToken","matches1","parenL","dot"],"sources":["D:/WEB-PROJECT/Schwarz/frontend/node_modules/sucrase/dist/esm/util/elideImportEquals.js"],"sourcesContent":["import {TokenType as tt} from \"../parser/tokenizer/types\";\n\n\nexport default function elideImportEquals(tokens) {\n  // import\n  tokens.removeInitialToken();\n  // name\n  tokens.removeToken();\n  // =\n  tokens.removeToken();\n  // name or require\n  tokens.removeToken();\n  // Handle either `import A = require('A')` or `import A = B.C.D`.\n  if (tokens.matches1(tt.parenL)) {\n    // (\n    tokens.removeToken();\n    // path string\n    tokens.removeToken();\n    // )\n    tokens.removeToken();\n  } else {\n    while (tokens.matches1(tt.dot)) {\n      // .\n      tokens.removeToken();\n      // name\n      tokens.removeToken();\n    }\n  }\n}\n"],"mappings":"AAAA,SAAQA,SAAS,IAAIC,EAAE,QAAO,2BAA2B;AAGzD,eAAe,SAASC,iBAAiBA,CAACC,MAAM,EAAE;EAChD;EACAA,MAAM,CAACC,kBAAkB,CAAC,CAAC;EAC3B;EACAD,MAAM,CAACE,WAAW,CAAC,CAAC;EACpB;EACAF,MAAM,CAACE,WAAW,CAAC,CAAC;EACpB;EACAF,MAAM,CAACE,WAAW,CAAC,CAAC;EACpB;EACA,IAAIF,MAAM,CAACG,QAAQ,CAACL,EAAE,CAACM,MAAM,CAAC,EAAE;IAC9B;IACAJ,MAAM,CAACE,WAAW,CAAC,CAAC;IACpB;IACAF,MAAM,CAACE,WAAW,CAAC,CAAC;IACpB;IACAF,MAAM,CAACE,WAAW,CAAC,CAAC;EACtB,CAAC,MAAM;IACL,OAAOF,MAAM,CAACG,QAAQ,CAACL,EAAE,CAACO,GAAG,CAAC,EAAE;MAC9B;MACAL,MAAM,CAACE,WAAW,CAAC,CAAC;MACpB;MACAF,MAAM,CAACE,WAAW,CAAC,CAAC;IACtB;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}