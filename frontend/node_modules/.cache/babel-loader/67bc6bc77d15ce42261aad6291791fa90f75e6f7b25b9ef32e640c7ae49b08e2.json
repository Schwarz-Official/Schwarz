{"ast":null,"code":"// @ts-check\n/**\n * @typedef {{type: 'dependency', file: string} | {type: 'dir-dependency', dir: string, glob: string}} Dependency\n */ /**\n    *\n    * @param {import('../lib/content.js').ContentPath} contentPath\n    * @returns {Dependency[]}\n    */\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"default\", {\n  enumerable: true,\n  get: function () {\n    return parseDependency;\n  }\n});\nfunction parseDependency(contentPath) {\n  if (contentPath.ignore) {\n    return [];\n  }\n  if (!contentPath.glob) {\n    return [{\n      type: \"dependency\",\n      file: contentPath.base\n    }];\n  }\n  if (process.env.ROLLUP_WATCH === \"true\") {\n    // rollup-plugin-postcss does not support dir-dependency messages\n    // but directories can be watched in the same way as files\n    return [{\n      type: \"dependency\",\n      file: contentPath.base\n    }];\n  }\n  return [{\n    type: \"dir-dependency\",\n    dir: contentPath.base,\n    glob: contentPath.glob\n  }];\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","enumerable","get","parseDependency","contentPath","ignore","glob","type","file","base","process","env","ROLLUP_WATCH","dir"],"sources":["D:/WEB-PROJECT/Schwarz/frontend/node_modules/tailwindcss/lib/util/parseDependency.js"],"sourcesContent":["// @ts-check\n/**\n * @typedef {{type: 'dependency', file: string} | {type: 'dir-dependency', dir: string, glob: string}} Dependency\n */ /**\n *\n * @param {import('../lib/content.js').ContentPath} contentPath\n * @returns {Dependency[]}\n */ \"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nObject.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function() {\n        return parseDependency;\n    }\n});\nfunction parseDependency(contentPath) {\n    if (contentPath.ignore) {\n        return [];\n    }\n    if (!contentPath.glob) {\n        return [\n            {\n                type: \"dependency\",\n                file: contentPath.base\n            }\n        ];\n    }\n    if (process.env.ROLLUP_WATCH === \"true\") {\n        // rollup-plugin-postcss does not support dir-dependency messages\n        // but directories can be watched in the same way as files\n        return [\n            {\n                type: \"dependency\",\n                file: contentPath.base\n            }\n        ];\n    }\n    return [\n        {\n            type: \"dir-dependency\",\n            dir: contentPath.base,\n            glob: contentPath.glob\n        }\n    ];\n}\n"],"mappings":"AAAA;AACA;AACA;AACA,GAFA,CAEI;AACJ;AACA;AACA;AACA,MAAI,YAAY;;AAChBA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EACzCC,KAAK,EAAE;AACX,CAAC,CAAC;AACFH,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,SAAS,EAAE;EACtCE,UAAU,EAAE,IAAI;EAChBC,GAAG,EAAE,SAAAA,CAAA,EAAW;IACZ,OAAOC,eAAe;EAC1B;AACJ,CAAC,CAAC;AACF,SAASA,eAAeA,CAACC,WAAW,EAAE;EAClC,IAAIA,WAAW,CAACC,MAAM,EAAE;IACpB,OAAO,EAAE;EACb;EACA,IAAI,CAACD,WAAW,CAACE,IAAI,EAAE;IACnB,OAAO,CACH;MACIC,IAAI,EAAE,YAAY;MAClBC,IAAI,EAAEJ,WAAW,CAACK;IACtB,CAAC,CACJ;EACL;EACA,IAAIC,OAAO,CAACC,GAAG,CAACC,YAAY,KAAK,MAAM,EAAE;IACrC;IACA;IACA,OAAO,CACH;MACIL,IAAI,EAAE,YAAY;MAClBC,IAAI,EAAEJ,WAAW,CAACK;IACtB,CAAC,CACJ;EACL;EACA,OAAO,CACH;IACIF,IAAI,EAAE,gBAAgB;IACtBM,GAAG,EAAET,WAAW,CAACK,IAAI;IACrBH,IAAI,EAAEF,WAAW,CAACE;EACtB,CAAC,CACJ;AACL"},"metadata":{},"sourceType":"script","externalDependencies":[]}