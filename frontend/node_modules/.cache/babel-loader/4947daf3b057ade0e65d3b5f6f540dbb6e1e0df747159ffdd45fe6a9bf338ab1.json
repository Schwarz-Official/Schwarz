{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\nvar _util = require(\"../util\");\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\nvar cloneNode = function cloneNode(obj, parent) {\n  if (typeof obj !== 'object' || obj === null) {\n    return obj;\n  }\n  var cloned = new obj.constructor();\n  for (var i in obj) {\n    if (!obj.hasOwnProperty(i)) {\n      continue;\n    }\n    var value = obj[i];\n    var type = typeof value;\n    if (i === 'parent' && type === 'object') {\n      if (parent) {\n        cloned[i] = parent;\n      }\n    } else if (value instanceof Array) {\n      cloned[i] = value.map(function (j) {\n        return cloneNode(j, cloned);\n      });\n    } else {\n      cloned[i] = cloneNode(value, cloned);\n    }\n  }\n  return cloned;\n};\nvar Node = /*#__PURE__*/function () {\n  function Node(opts) {\n    if (opts === void 0) {\n      opts = {};\n    }\n    Object.assign(this, opts);\n    this.spaces = this.spaces || {};\n    this.spaces.before = this.spaces.before || '';\n    this.spaces.after = this.spaces.after || '';\n  }\n  var _proto = Node.prototype;\n  _proto.remove = function remove() {\n    if (this.parent) {\n      this.parent.removeChild(this);\n    }\n    this.parent = undefined;\n    return this;\n  };\n  _proto.replaceWith = function replaceWith() {\n    if (this.parent) {\n      for (var index in arguments) {\n        this.parent.insertBefore(this, arguments[index]);\n      }\n      this.remove();\n    }\n    return this;\n  };\n  _proto.next = function next() {\n    return this.parent.at(this.parent.index(this) + 1);\n  };\n  _proto.prev = function prev() {\n    return this.parent.at(this.parent.index(this) - 1);\n  };\n  _proto.clone = function clone(overrides) {\n    if (overrides === void 0) {\n      overrides = {};\n    }\n    var cloned = cloneNode(this);\n    for (var name in overrides) {\n      cloned[name] = overrides[name];\n    }\n    return cloned;\n  }\n\n  /**\n   * Some non-standard syntax doesn't follow normal escaping rules for css.\n   * This allows non standard syntax to be appended to an existing property\n   * by specifying the escaped value. By specifying the escaped value,\n   * illegal characters are allowed to be directly inserted into css output.\n   * @param {string} name the property to set\n   * @param {any} value the unescaped value of the property\n   * @param {string} valueEscaped optional. the escaped value of the property.\n   */;\n  _proto.appendToPropertyAndEscape = function appendToPropertyAndEscape(name, value, valueEscaped) {\n    if (!this.raws) {\n      this.raws = {};\n    }\n    var originalValue = this[name];\n    var originalEscaped = this.raws[name];\n    this[name] = originalValue + value; // this may trigger a setter that updates raws, so it has to be set first.\n    if (originalEscaped || valueEscaped !== value) {\n      this.raws[name] = (originalEscaped || originalValue) + valueEscaped;\n    } else {\n      delete this.raws[name]; // delete any escaped value that was created by the setter.\n    }\n  }\n\n  /**\n   * Some non-standard syntax doesn't follow normal escaping rules for css.\n   * This allows the escaped value to be specified directly, allowing illegal\n   * characters to be directly inserted into css output.\n   * @param {string} name the property to set\n   * @param {any} value the unescaped value of the property\n   * @param {string} valueEscaped the escaped value of the property.\n   */;\n  _proto.setPropertyAndEscape = function setPropertyAndEscape(name, value, valueEscaped) {\n    if (!this.raws) {\n      this.raws = {};\n    }\n    this[name] = value; // this may trigger a setter that updates raws, so it has to be set first.\n    this.raws[name] = valueEscaped;\n  }\n\n  /**\n   * When you want a value to passed through to CSS directly. This method\n   * deletes the corresponding raw value causing the stringifier to fallback\n   * to the unescaped value.\n   * @param {string} name the property to set.\n   * @param {any} value The value that is both escaped and unescaped.\n   */;\n  _proto.setPropertyWithoutEscape = function setPropertyWithoutEscape(name, value) {\n    this[name] = value; // this may trigger a setter that updates raws, so it has to be set first.\n    if (this.raws) {\n      delete this.raws[name];\n    }\n  }\n\n  /**\n   *\n   * @param {number} line The number (starting with 1)\n   * @param {number} column The column number (starting with 1)\n   */;\n  _proto.isAtPosition = function isAtPosition(line, column) {\n    if (this.source && this.source.start && this.source.end) {\n      if (this.source.start.line > line) {\n        return false;\n      }\n      if (this.source.end.line < line) {\n        return false;\n      }\n      if (this.source.start.line === line && this.source.start.column > column) {\n        return false;\n      }\n      if (this.source.end.line === line && this.source.end.column < column) {\n        return false;\n      }\n      return true;\n    }\n    return undefined;\n  };\n  _proto.stringifyProperty = function stringifyProperty(name) {\n    return this.raws && this.raws[name] || this[name];\n  };\n  _proto.valueToString = function valueToString() {\n    return String(this.stringifyProperty(\"value\"));\n  };\n  _proto.toString = function toString() {\n    return [this.rawSpaceBefore, this.valueToString(), this.rawSpaceAfter].join('');\n  };\n  _createClass(Node, [{\n    key: \"rawSpaceBefore\",\n    get: function get() {\n      var rawSpace = this.raws && this.raws.spaces && this.raws.spaces.before;\n      if (rawSpace === undefined) {\n        rawSpace = this.spaces && this.spaces.before;\n      }\n      return rawSpace || \"\";\n    },\n    set: function set(raw) {\n      (0, _util.ensureObject)(this, \"raws\", \"spaces\");\n      this.raws.spaces.before = raw;\n    }\n  }, {\n    key: \"rawSpaceAfter\",\n    get: function get() {\n      var rawSpace = this.raws && this.raws.spaces && this.raws.spaces.after;\n      if (rawSpace === undefined) {\n        rawSpace = this.spaces.after;\n      }\n      return rawSpace || \"\";\n    },\n    set: function set(raw) {\n      (0, _util.ensureObject)(this, \"raws\", \"spaces\");\n      this.raws.spaces.after = raw;\n    }\n  }]);\n  return Node;\n}();\nexports[\"default\"] = Node;\nmodule.exports = exports.default;","map":{"version":3,"names":["exports","__esModule","_util","require","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","Constructor","protoProps","staticProps","prototype","cloneNode","obj","parent","cloned","constructor","hasOwnProperty","value","type","Array","map","j","Node","opts","assign","spaces","before","after","_proto","remove","removeChild","undefined","replaceWith","index","arguments","insertBefore","next","at","prev","clone","overrides","name","appendToPropertyAndEscape","valueEscaped","raws","originalValue","originalEscaped","setPropertyAndEscape","setPropertyWithoutEscape","isAtPosition","line","column","source","start","end","stringifyProperty","valueToString","String","toString","rawSpaceBefore","rawSpaceAfter","join","get","rawSpace","set","raw","ensureObject","module","default"],"sources":["D:/WEB-PROJECT/Schwarz/frontend/node_modules/postcss-selector-parser/dist/selectors/node.js"],"sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\nvar _util = require(\"../util\");\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nvar cloneNode = function cloneNode(obj, parent) {\n  if (typeof obj !== 'object' || obj === null) {\n    return obj;\n  }\n  var cloned = new obj.constructor();\n  for (var i in obj) {\n    if (!obj.hasOwnProperty(i)) {\n      continue;\n    }\n    var value = obj[i];\n    var type = typeof value;\n    if (i === 'parent' && type === 'object') {\n      if (parent) {\n        cloned[i] = parent;\n      }\n    } else if (value instanceof Array) {\n      cloned[i] = value.map(function (j) {\n        return cloneNode(j, cloned);\n      });\n    } else {\n      cloned[i] = cloneNode(value, cloned);\n    }\n  }\n  return cloned;\n};\nvar Node = /*#__PURE__*/function () {\n  function Node(opts) {\n    if (opts === void 0) {\n      opts = {};\n    }\n    Object.assign(this, opts);\n    this.spaces = this.spaces || {};\n    this.spaces.before = this.spaces.before || '';\n    this.spaces.after = this.spaces.after || '';\n  }\n  var _proto = Node.prototype;\n  _proto.remove = function remove() {\n    if (this.parent) {\n      this.parent.removeChild(this);\n    }\n    this.parent = undefined;\n    return this;\n  };\n  _proto.replaceWith = function replaceWith() {\n    if (this.parent) {\n      for (var index in arguments) {\n        this.parent.insertBefore(this, arguments[index]);\n      }\n      this.remove();\n    }\n    return this;\n  };\n  _proto.next = function next() {\n    return this.parent.at(this.parent.index(this) + 1);\n  };\n  _proto.prev = function prev() {\n    return this.parent.at(this.parent.index(this) - 1);\n  };\n  _proto.clone = function clone(overrides) {\n    if (overrides === void 0) {\n      overrides = {};\n    }\n    var cloned = cloneNode(this);\n    for (var name in overrides) {\n      cloned[name] = overrides[name];\n    }\n    return cloned;\n  }\n\n  /**\n   * Some non-standard syntax doesn't follow normal escaping rules for css.\n   * This allows non standard syntax to be appended to an existing property\n   * by specifying the escaped value. By specifying the escaped value,\n   * illegal characters are allowed to be directly inserted into css output.\n   * @param {string} name the property to set\n   * @param {any} value the unescaped value of the property\n   * @param {string} valueEscaped optional. the escaped value of the property.\n   */;\n  _proto.appendToPropertyAndEscape = function appendToPropertyAndEscape(name, value, valueEscaped) {\n    if (!this.raws) {\n      this.raws = {};\n    }\n    var originalValue = this[name];\n    var originalEscaped = this.raws[name];\n    this[name] = originalValue + value; // this may trigger a setter that updates raws, so it has to be set first.\n    if (originalEscaped || valueEscaped !== value) {\n      this.raws[name] = (originalEscaped || originalValue) + valueEscaped;\n    } else {\n      delete this.raws[name]; // delete any escaped value that was created by the setter.\n    }\n  }\n\n  /**\n   * Some non-standard syntax doesn't follow normal escaping rules for css.\n   * This allows the escaped value to be specified directly, allowing illegal\n   * characters to be directly inserted into css output.\n   * @param {string} name the property to set\n   * @param {any} value the unescaped value of the property\n   * @param {string} valueEscaped the escaped value of the property.\n   */;\n  _proto.setPropertyAndEscape = function setPropertyAndEscape(name, value, valueEscaped) {\n    if (!this.raws) {\n      this.raws = {};\n    }\n    this[name] = value; // this may trigger a setter that updates raws, so it has to be set first.\n    this.raws[name] = valueEscaped;\n  }\n\n  /**\n   * When you want a value to passed through to CSS directly. This method\n   * deletes the corresponding raw value causing the stringifier to fallback\n   * to the unescaped value.\n   * @param {string} name the property to set.\n   * @param {any} value The value that is both escaped and unescaped.\n   */;\n  _proto.setPropertyWithoutEscape = function setPropertyWithoutEscape(name, value) {\n    this[name] = value; // this may trigger a setter that updates raws, so it has to be set first.\n    if (this.raws) {\n      delete this.raws[name];\n    }\n  }\n\n  /**\n   *\n   * @param {number} line The number (starting with 1)\n   * @param {number} column The column number (starting with 1)\n   */;\n  _proto.isAtPosition = function isAtPosition(line, column) {\n    if (this.source && this.source.start && this.source.end) {\n      if (this.source.start.line > line) {\n        return false;\n      }\n      if (this.source.end.line < line) {\n        return false;\n      }\n      if (this.source.start.line === line && this.source.start.column > column) {\n        return false;\n      }\n      if (this.source.end.line === line && this.source.end.column < column) {\n        return false;\n      }\n      return true;\n    }\n    return undefined;\n  };\n  _proto.stringifyProperty = function stringifyProperty(name) {\n    return this.raws && this.raws[name] || this[name];\n  };\n  _proto.valueToString = function valueToString() {\n    return String(this.stringifyProperty(\"value\"));\n  };\n  _proto.toString = function toString() {\n    return [this.rawSpaceBefore, this.valueToString(), this.rawSpaceAfter].join('');\n  };\n  _createClass(Node, [{\n    key: \"rawSpaceBefore\",\n    get: function get() {\n      var rawSpace = this.raws && this.raws.spaces && this.raws.spaces.before;\n      if (rawSpace === undefined) {\n        rawSpace = this.spaces && this.spaces.before;\n      }\n      return rawSpace || \"\";\n    },\n    set: function set(raw) {\n      (0, _util.ensureObject)(this, \"raws\", \"spaces\");\n      this.raws.spaces.before = raw;\n    }\n  }, {\n    key: \"rawSpaceAfter\",\n    get: function get() {\n      var rawSpace = this.raws && this.raws.spaces && this.raws.spaces.after;\n      if (rawSpace === undefined) {\n        rawSpace = this.spaces.after;\n      }\n      return rawSpace || \"\";\n    },\n    set: function set(raw) {\n      (0, _util.ensureObject)(this, \"raws\", \"spaces\");\n      this.raws.spaces.after = raw;\n    }\n  }]);\n  return Node;\n}();\nexports[\"default\"] = Node;\nmodule.exports = exports.default;"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}