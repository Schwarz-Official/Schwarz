{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nfunction _export(target, all) {\n  for (var name in all) Object.defineProperty(target, name, {\n    enumerable: true,\n    get: all[name]\n  });\n}\n_export(exports, {\n  withAlphaValue: function () {\n    return withAlphaValue;\n  },\n  default: function () {\n    return withAlphaVariable;\n  }\n});\nconst _color = require(\"./color\");\nfunction withAlphaValue(color, alphaValue, defaultValue) {\n  if (typeof color === \"function\") {\n    return color({\n      opacityValue: alphaValue\n    });\n  }\n  let parsed = (0, _color.parseColor)(color, {\n    loose: true\n  });\n  if (parsed === null) {\n    return defaultValue;\n  }\n  return (0, _color.formatColor)({\n    ...parsed,\n    alpha: alphaValue\n  });\n}\nfunction withAlphaVariable({\n  color,\n  property,\n  variable\n}) {\n  let properties = [].concat(property);\n  if (typeof color === \"function\") {\n    return {\n      [variable]: \"1\",\n      ...Object.fromEntries(properties.map(p => {\n        return [p, color({\n          opacityVariable: variable,\n          opacityValue: `var(${variable})`\n        })];\n      }))\n    };\n  }\n  const parsed = (0, _color.parseColor)(color);\n  if (parsed === null) {\n    return Object.fromEntries(properties.map(p => [p, color]));\n  }\n  if (parsed.alpha !== undefined) {\n    // Has an alpha value, return color as-is\n    return Object.fromEntries(properties.map(p => [p, color]));\n  }\n  return {\n    [variable]: \"1\",\n    ...Object.fromEntries(properties.map(p => {\n      return [p, (0, _color.formatColor)({\n        ...parsed,\n        alpha: `var(${variable})`\n      })];\n    }))\n  };\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","_export","target","all","name","enumerable","get","withAlphaValue","default","withAlphaVariable","_color","require","color","alphaValue","defaultValue","opacityValue","parsed","parseColor","loose","formatColor","alpha","property","variable","properties","concat","fromEntries","map","p","opacityVariable","undefined"],"sources":["D:/WEB-PROJECT/Schwarz/frontend/node_modules/tailwindcss/lib/util/withAlphaVariable.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    withAlphaValue: function() {\n        return withAlphaValue;\n    },\n    default: function() {\n        return withAlphaVariable;\n    }\n});\nconst _color = require(\"./color\");\nfunction withAlphaValue(color, alphaValue, defaultValue) {\n    if (typeof color === \"function\") {\n        return color({\n            opacityValue: alphaValue\n        });\n    }\n    let parsed = (0, _color.parseColor)(color, {\n        loose: true\n    });\n    if (parsed === null) {\n        return defaultValue;\n    }\n    return (0, _color.formatColor)({\n        ...parsed,\n        alpha: alphaValue\n    });\n}\nfunction withAlphaVariable({ color , property , variable  }) {\n    let properties = [].concat(property);\n    if (typeof color === \"function\") {\n        return {\n            [variable]: \"1\",\n            ...Object.fromEntries(properties.map((p)=>{\n                return [\n                    p,\n                    color({\n                        opacityVariable: variable,\n                        opacityValue: `var(${variable})`\n                    })\n                ];\n            }))\n        };\n    }\n    const parsed = (0, _color.parseColor)(color);\n    if (parsed === null) {\n        return Object.fromEntries(properties.map((p)=>[\n                p,\n                color\n            ]));\n    }\n    if (parsed.alpha !== undefined) {\n        // Has an alpha value, return color as-is\n        return Object.fromEntries(properties.map((p)=>[\n                p,\n                color\n            ]));\n    }\n    return {\n        [variable]: \"1\",\n        ...Object.fromEntries(properties.map((p)=>{\n            return [\n                p,\n                (0, _color.formatColor)({\n                    ...parsed,\n                    alpha: `var(${variable})`\n                })\n            ];\n        }))\n    };\n}\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EACzCC,KAAK,EAAE;AACX,CAAC,CAAC;AACF,SAASC,OAAOA,CAACC,MAAM,EAAEC,GAAG,EAAE;EAC1B,KAAI,IAAIC,IAAI,IAAID,GAAG,EAACN,MAAM,CAACC,cAAc,CAACI,MAAM,EAAEE,IAAI,EAAE;IACpDC,UAAU,EAAE,IAAI;IAChBC,GAAG,EAAEH,GAAG,CAACC,IAAI;EACjB,CAAC,CAAC;AACN;AACAH,OAAO,CAACF,OAAO,EAAE;EACbQ,cAAc,EAAE,SAAAA,CAAA,EAAW;IACvB,OAAOA,cAAc;EACzB,CAAC;EACDC,OAAO,EAAE,SAAAA,CAAA,EAAW;IAChB,OAAOC,iBAAiB;EAC5B;AACJ,CAAC,CAAC;AACF,MAAMC,MAAM,GAAGC,OAAO,CAAC,SAAS,CAAC;AACjC,SAASJ,cAAcA,CAACK,KAAK,EAAEC,UAAU,EAAEC,YAAY,EAAE;EACrD,IAAI,OAAOF,KAAK,KAAK,UAAU,EAAE;IAC7B,OAAOA,KAAK,CAAC;MACTG,YAAY,EAAEF;IAClB,CAAC,CAAC;EACN;EACA,IAAIG,MAAM,GAAG,CAAC,CAAC,EAAEN,MAAM,CAACO,UAAU,EAAEL,KAAK,EAAE;IACvCM,KAAK,EAAE;EACX,CAAC,CAAC;EACF,IAAIF,MAAM,KAAK,IAAI,EAAE;IACjB,OAAOF,YAAY;EACvB;EACA,OAAO,CAAC,CAAC,EAAEJ,MAAM,CAACS,WAAW,EAAE;IAC3B,GAAGH,MAAM;IACTI,KAAK,EAAEP;EACX,CAAC,CAAC;AACN;AACA,SAASJ,iBAAiBA,CAAC;EAAEG,KAAK;EAAGS,QAAQ;EAAGC;AAAU,CAAC,EAAE;EACzD,IAAIC,UAAU,GAAG,EAAE,CAACC,MAAM,CAACH,QAAQ,CAAC;EACpC,IAAI,OAAOT,KAAK,KAAK,UAAU,EAAE;IAC7B,OAAO;MACH,CAACU,QAAQ,GAAG,GAAG;MACf,GAAGzB,MAAM,CAAC4B,WAAW,CAACF,UAAU,CAACG,GAAG,CAAEC,CAAC,IAAG;QACtC,OAAO,CACHA,CAAC,EACDf,KAAK,CAAC;UACFgB,eAAe,EAAEN,QAAQ;UACzBP,YAAY,EAAG,OAAMO,QAAS;QAClC,CAAC,CAAC,CACL;MACL,CAAC,CAAC;IACN,CAAC;EACL;EACA,MAAMN,MAAM,GAAG,CAAC,CAAC,EAAEN,MAAM,CAACO,UAAU,EAAEL,KAAK,CAAC;EAC5C,IAAII,MAAM,KAAK,IAAI,EAAE;IACjB,OAAOnB,MAAM,CAAC4B,WAAW,CAACF,UAAU,CAACG,GAAG,CAAEC,CAAC,IAAG,CACtCA,CAAC,EACDf,KAAK,CACR,CAAC,CAAC;EACX;EACA,IAAII,MAAM,CAACI,KAAK,KAAKS,SAAS,EAAE;IAC5B;IACA,OAAOhC,MAAM,CAAC4B,WAAW,CAACF,UAAU,CAACG,GAAG,CAAEC,CAAC,IAAG,CACtCA,CAAC,EACDf,KAAK,CACR,CAAC,CAAC;EACX;EACA,OAAO;IACH,CAACU,QAAQ,GAAG,GAAG;IACf,GAAGzB,MAAM,CAAC4B,WAAW,CAACF,UAAU,CAACG,GAAG,CAAEC,CAAC,IAAG;MACtC,OAAO,CACHA,CAAC,EACD,CAAC,CAAC,EAAEjB,MAAM,CAACS,WAAW,EAAE;QACpB,GAAGH,MAAM;QACTI,KAAK,EAAG,OAAME,QAAS;MAC3B,CAAC,CAAC,CACL;IACL,CAAC,CAAC;EACN,CAAC;AACL"},"metadata":{},"sourceType":"script","externalDependencies":[]}