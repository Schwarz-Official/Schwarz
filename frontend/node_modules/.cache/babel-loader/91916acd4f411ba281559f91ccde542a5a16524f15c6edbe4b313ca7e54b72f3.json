{"ast":null,"code":"/*! run-parallel. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\nmodule.exports = runParallel;\nconst queueMicrotask = require('queue-microtask');\nfunction runParallel(tasks, cb) {\n  let results, pending, keys;\n  let isSync = true;\n  if (Array.isArray(tasks)) {\n    results = [];\n    pending = tasks.length;\n  } else {\n    keys = Object.keys(tasks);\n    results = {};\n    pending = keys.length;\n  }\n  function done(err) {\n    function end() {\n      if (cb) cb(err, results);\n      cb = null;\n    }\n    if (isSync) queueMicrotask(end);else end();\n  }\n  function each(i, err, result) {\n    results[i] = result;\n    if (--pending === 0 || err) {\n      done(err);\n    }\n  }\n  if (!pending) {\n    // empty\n    done(null);\n  } else if (keys) {\n    // object\n    keys.forEach(function (key) {\n      tasks[key](function (err, result) {\n        each(key, err, result);\n      });\n    });\n  } else {\n    // array\n    tasks.forEach(function (task, i) {\n      task(function (err, result) {\n        each(i, err, result);\n      });\n    });\n  }\n  isSync = false;\n}","map":{"version":3,"names":["module","exports","runParallel","queueMicrotask","require","tasks","cb","results","pending","keys","isSync","Array","isArray","length","Object","done","err","end","each","i","result","forEach","key","task"],"sources":["D:/WEB-PROJECT/Schwarz/frontend/node_modules/run-parallel/index.js"],"sourcesContent":["/*! run-parallel. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\nmodule.exports = runParallel\n\nconst queueMicrotask = require('queue-microtask')\n\nfunction runParallel (tasks, cb) {\n  let results, pending, keys\n  let isSync = true\n\n  if (Array.isArray(tasks)) {\n    results = []\n    pending = tasks.length\n  } else {\n    keys = Object.keys(tasks)\n    results = {}\n    pending = keys.length\n  }\n\n  function done (err) {\n    function end () {\n      if (cb) cb(err, results)\n      cb = null\n    }\n    if (isSync) queueMicrotask(end)\n    else end()\n  }\n\n  function each (i, err, result) {\n    results[i] = result\n    if (--pending === 0 || err) {\n      done(err)\n    }\n  }\n\n  if (!pending) {\n    // empty\n    done(null)\n  } else if (keys) {\n    // object\n    keys.forEach(function (key) {\n      tasks[key](function (err, result) { each(key, err, result) })\n    })\n  } else {\n    // array\n    tasks.forEach(function (task, i) {\n      task(function (err, result) { each(i, err, result) })\n    })\n  }\n\n  isSync = false\n}\n"],"mappings":"AAAA;AACAA,MAAM,CAACC,OAAO,GAAGC,WAAW;AAE5B,MAAMC,cAAc,GAAGC,OAAO,CAAC,iBAAiB,CAAC;AAEjD,SAASF,WAAWA,CAAEG,KAAK,EAAEC,EAAE,EAAE;EAC/B,IAAIC,OAAO,EAAEC,OAAO,EAAEC,IAAI;EAC1B,IAAIC,MAAM,GAAG,IAAI;EAEjB,IAAIC,KAAK,CAACC,OAAO,CAACP,KAAK,CAAC,EAAE;IACxBE,OAAO,GAAG,EAAE;IACZC,OAAO,GAAGH,KAAK,CAACQ,MAAM;EACxB,CAAC,MAAM;IACLJ,IAAI,GAAGK,MAAM,CAACL,IAAI,CAACJ,KAAK,CAAC;IACzBE,OAAO,GAAG,CAAC,CAAC;IACZC,OAAO,GAAGC,IAAI,CAACI,MAAM;EACvB;EAEA,SAASE,IAAIA,CAAEC,GAAG,EAAE;IAClB,SAASC,GAAGA,CAAA,EAAI;MACd,IAAIX,EAAE,EAAEA,EAAE,CAACU,GAAG,EAAET,OAAO,CAAC;MACxBD,EAAE,GAAG,IAAI;IACX;IACA,IAAII,MAAM,EAAEP,cAAc,CAACc,GAAG,CAAC,MAC1BA,GAAG,CAAC,CAAC;EACZ;EAEA,SAASC,IAAIA,CAAEC,CAAC,EAAEH,GAAG,EAAEI,MAAM,EAAE;IAC7Bb,OAAO,CAACY,CAAC,CAAC,GAAGC,MAAM;IACnB,IAAI,EAAEZ,OAAO,KAAK,CAAC,IAAIQ,GAAG,EAAE;MAC1BD,IAAI,CAACC,GAAG,CAAC;IACX;EACF;EAEA,IAAI,CAACR,OAAO,EAAE;IACZ;IACAO,IAAI,CAAC,IAAI,CAAC;EACZ,CAAC,MAAM,IAAIN,IAAI,EAAE;IACf;IACAA,IAAI,CAACY,OAAO,CAAC,UAAUC,GAAG,EAAE;MAC1BjB,KAAK,CAACiB,GAAG,CAAC,CAAC,UAAUN,GAAG,EAAEI,MAAM,EAAE;QAAEF,IAAI,CAACI,GAAG,EAAEN,GAAG,EAAEI,MAAM,CAAC;MAAC,CAAC,CAAC;IAC/D,CAAC,CAAC;EACJ,CAAC,MAAM;IACL;IACAf,KAAK,CAACgB,OAAO,CAAC,UAAUE,IAAI,EAAEJ,CAAC,EAAE;MAC/BI,IAAI,CAAC,UAAUP,GAAG,EAAEI,MAAM,EAAE;QAAEF,IAAI,CAACC,CAAC,EAAEH,GAAG,EAAEI,MAAM,CAAC;MAAC,CAAC,CAAC;IACvD,CAAC,CAAC;EACJ;EAEAV,MAAM,GAAG,KAAK;AAChB"},"metadata":{},"sourceType":"script","externalDependencies":[]}