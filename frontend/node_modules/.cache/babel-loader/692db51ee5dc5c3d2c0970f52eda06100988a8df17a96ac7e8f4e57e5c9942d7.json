{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"default\", {\n  enumerable: true,\n  get: function () {\n    return normalizeTailwindDirectives;\n  }\n});\nconst _log = /*#__PURE__*/_interop_require_default(require(\"../util/log\"));\nfunction _interop_require_default(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction normalizeTailwindDirectives(root) {\n  let tailwindDirectives = new Set();\n  let layerDirectives = new Set();\n  let applyDirectives = new Set();\n  root.walkAtRules(atRule => {\n    if (atRule.name === \"apply\") {\n      applyDirectives.add(atRule);\n    }\n    if (atRule.name === \"import\") {\n      if (atRule.params === '\"tailwindcss/base\"' || atRule.params === \"'tailwindcss/base'\") {\n        atRule.name = \"tailwind\";\n        atRule.params = \"base\";\n      } else if (atRule.params === '\"tailwindcss/components\"' || atRule.params === \"'tailwindcss/components'\") {\n        atRule.name = \"tailwind\";\n        atRule.params = \"components\";\n      } else if (atRule.params === '\"tailwindcss/utilities\"' || atRule.params === \"'tailwindcss/utilities'\") {\n        atRule.name = \"tailwind\";\n        atRule.params = \"utilities\";\n      } else if (atRule.params === '\"tailwindcss/screens\"' || atRule.params === \"'tailwindcss/screens'\" || atRule.params === '\"tailwindcss/variants\"' || atRule.params === \"'tailwindcss/variants'\") {\n        atRule.name = \"tailwind\";\n        atRule.params = \"variants\";\n      }\n    }\n    if (atRule.name === \"tailwind\") {\n      if (atRule.params === \"screens\") {\n        atRule.params = \"variants\";\n      }\n      tailwindDirectives.add(atRule.params);\n    }\n    if ([\"layer\", \"responsive\", \"variants\"].includes(atRule.name)) {\n      if ([\"responsive\", \"variants\"].includes(atRule.name)) {\n        _log.default.warn(`${atRule.name}-at-rule-deprecated`, [`The \\`@${atRule.name}\\` directive has been deprecated in Tailwind CSS v3.0.`, `Use \\`@layer utilities\\` or \\`@layer components\\` instead.`, \"https://tailwindcss.com/docs/upgrade-guide#replace-variants-with-layer\"]);\n      }\n      layerDirectives.add(atRule);\n    }\n  });\n  if (!tailwindDirectives.has(\"base\") || !tailwindDirectives.has(\"components\") || !tailwindDirectives.has(\"utilities\")) {\n    for (let rule of layerDirectives) {\n      if (rule.name === \"layer\" && [\"base\", \"components\", \"utilities\"].includes(rule.params)) {\n        if (!tailwindDirectives.has(rule.params)) {\n          throw rule.error(`\\`@layer ${rule.params}\\` is used but no matching \\`@tailwind ${rule.params}\\` directive is present.`);\n        }\n      } else if (rule.name === \"responsive\") {\n        if (!tailwindDirectives.has(\"utilities\")) {\n          throw rule.error(\"`@responsive` is used but `@tailwind utilities` is missing.\");\n        }\n      } else if (rule.name === \"variants\") {\n        if (!tailwindDirectives.has(\"utilities\")) {\n          throw rule.error(\"`@variants` is used but `@tailwind utilities` is missing.\");\n        }\n      }\n    }\n  }\n  return {\n    tailwindDirectives,\n    applyDirectives\n  };\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","enumerable","get","normalizeTailwindDirectives","_log","_interop_require_default","require","obj","__esModule","default","root","tailwindDirectives","Set","layerDirectives","applyDirectives","walkAtRules","atRule","name","add","params","includes","warn","has","rule","error"],"sources":["D:/WEB-PROJECT/Schwarz/frontend/node_modules/tailwindcss/lib/lib/normalizeTailwindDirectives.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nObject.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function() {\n        return normalizeTailwindDirectives;\n    }\n});\nconst _log = /*#__PURE__*/ _interop_require_default(require(\"../util/log\"));\nfunction _interop_require_default(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\nfunction normalizeTailwindDirectives(root) {\n    let tailwindDirectives = new Set();\n    let layerDirectives = new Set();\n    let applyDirectives = new Set();\n    root.walkAtRules((atRule)=>{\n        if (atRule.name === \"apply\") {\n            applyDirectives.add(atRule);\n        }\n        if (atRule.name === \"import\") {\n            if (atRule.params === '\"tailwindcss/base\"' || atRule.params === \"'tailwindcss/base'\") {\n                atRule.name = \"tailwind\";\n                atRule.params = \"base\";\n            } else if (atRule.params === '\"tailwindcss/components\"' || atRule.params === \"'tailwindcss/components'\") {\n                atRule.name = \"tailwind\";\n                atRule.params = \"components\";\n            } else if (atRule.params === '\"tailwindcss/utilities\"' || atRule.params === \"'tailwindcss/utilities'\") {\n                atRule.name = \"tailwind\";\n                atRule.params = \"utilities\";\n            } else if (atRule.params === '\"tailwindcss/screens\"' || atRule.params === \"'tailwindcss/screens'\" || atRule.params === '\"tailwindcss/variants\"' || atRule.params === \"'tailwindcss/variants'\") {\n                atRule.name = \"tailwind\";\n                atRule.params = \"variants\";\n            }\n        }\n        if (atRule.name === \"tailwind\") {\n            if (atRule.params === \"screens\") {\n                atRule.params = \"variants\";\n            }\n            tailwindDirectives.add(atRule.params);\n        }\n        if ([\n            \"layer\",\n            \"responsive\",\n            \"variants\"\n        ].includes(atRule.name)) {\n            if ([\n                \"responsive\",\n                \"variants\"\n            ].includes(atRule.name)) {\n                _log.default.warn(`${atRule.name}-at-rule-deprecated`, [\n                    `The \\`@${atRule.name}\\` directive has been deprecated in Tailwind CSS v3.0.`,\n                    `Use \\`@layer utilities\\` or \\`@layer components\\` instead.`,\n                    \"https://tailwindcss.com/docs/upgrade-guide#replace-variants-with-layer\"\n                ]);\n            }\n            layerDirectives.add(atRule);\n        }\n    });\n    if (!tailwindDirectives.has(\"base\") || !tailwindDirectives.has(\"components\") || !tailwindDirectives.has(\"utilities\")) {\n        for (let rule of layerDirectives){\n            if (rule.name === \"layer\" && [\n                \"base\",\n                \"components\",\n                \"utilities\"\n            ].includes(rule.params)) {\n                if (!tailwindDirectives.has(rule.params)) {\n                    throw rule.error(`\\`@layer ${rule.params}\\` is used but no matching \\`@tailwind ${rule.params}\\` directive is present.`);\n                }\n            } else if (rule.name === \"responsive\") {\n                if (!tailwindDirectives.has(\"utilities\")) {\n                    throw rule.error(\"`@responsive` is used but `@tailwind utilities` is missing.\");\n                }\n            } else if (rule.name === \"variants\") {\n                if (!tailwindDirectives.has(\"utilities\")) {\n                    throw rule.error(\"`@variants` is used but `@tailwind utilities` is missing.\");\n                }\n            }\n        }\n    }\n    return {\n        tailwindDirectives,\n        applyDirectives\n    };\n}\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EACzCC,KAAK,EAAE;AACX,CAAC,CAAC;AACFH,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,SAAS,EAAE;EACtCE,UAAU,EAAE,IAAI;EAChBC,GAAG,EAAE,SAAAA,CAAA,EAAW;IACZ,OAAOC,2BAA2B;EACtC;AACJ,CAAC,CAAC;AACF,MAAMC,IAAI,GAAG,aAAcC,wBAAwB,CAACC,OAAO,CAAC,aAAa,CAAC,CAAC;AAC3E,SAASD,wBAAwBA,CAACE,GAAG,EAAE;EACnC,OAAOA,GAAG,IAAIA,GAAG,CAACC,UAAU,GAAGD,GAAG,GAAG;IACjCE,OAAO,EAAEF;EACb,CAAC;AACL;AACA,SAASJ,2BAA2BA,CAACO,IAAI,EAAE;EACvC,IAAIC,kBAAkB,GAAG,IAAIC,GAAG,CAAC,CAAC;EAClC,IAAIC,eAAe,GAAG,IAAID,GAAG,CAAC,CAAC;EAC/B,IAAIE,eAAe,GAAG,IAAIF,GAAG,CAAC,CAAC;EAC/BF,IAAI,CAACK,WAAW,CAAEC,MAAM,IAAG;IACvB,IAAIA,MAAM,CAACC,IAAI,KAAK,OAAO,EAAE;MACzBH,eAAe,CAACI,GAAG,CAACF,MAAM,CAAC;IAC/B;IACA,IAAIA,MAAM,CAACC,IAAI,KAAK,QAAQ,EAAE;MAC1B,IAAID,MAAM,CAACG,MAAM,KAAK,oBAAoB,IAAIH,MAAM,CAACG,MAAM,KAAK,oBAAoB,EAAE;QAClFH,MAAM,CAACC,IAAI,GAAG,UAAU;QACxBD,MAAM,CAACG,MAAM,GAAG,MAAM;MAC1B,CAAC,MAAM,IAAIH,MAAM,CAACG,MAAM,KAAK,0BAA0B,IAAIH,MAAM,CAACG,MAAM,KAAK,0BAA0B,EAAE;QACrGH,MAAM,CAACC,IAAI,GAAG,UAAU;QACxBD,MAAM,CAACG,MAAM,GAAG,YAAY;MAChC,CAAC,MAAM,IAAIH,MAAM,CAACG,MAAM,KAAK,yBAAyB,IAAIH,MAAM,CAACG,MAAM,KAAK,yBAAyB,EAAE;QACnGH,MAAM,CAACC,IAAI,GAAG,UAAU;QACxBD,MAAM,CAACG,MAAM,GAAG,WAAW;MAC/B,CAAC,MAAM,IAAIH,MAAM,CAACG,MAAM,KAAK,uBAAuB,IAAIH,MAAM,CAACG,MAAM,KAAK,uBAAuB,IAAIH,MAAM,CAACG,MAAM,KAAK,wBAAwB,IAAIH,MAAM,CAACG,MAAM,KAAK,wBAAwB,EAAE;QAC3LH,MAAM,CAACC,IAAI,GAAG,UAAU;QACxBD,MAAM,CAACG,MAAM,GAAG,UAAU;MAC9B;IACJ;IACA,IAAIH,MAAM,CAACC,IAAI,KAAK,UAAU,EAAE;MAC5B,IAAID,MAAM,CAACG,MAAM,KAAK,SAAS,EAAE;QAC7BH,MAAM,CAACG,MAAM,GAAG,UAAU;MAC9B;MACAR,kBAAkB,CAACO,GAAG,CAACF,MAAM,CAACG,MAAM,CAAC;IACzC;IACA,IAAI,CACA,OAAO,EACP,YAAY,EACZ,UAAU,CACb,CAACC,QAAQ,CAACJ,MAAM,CAACC,IAAI,CAAC,EAAE;MACrB,IAAI,CACA,YAAY,EACZ,UAAU,CACb,CAACG,QAAQ,CAACJ,MAAM,CAACC,IAAI,CAAC,EAAE;QACrBb,IAAI,CAACK,OAAO,CAACY,IAAI,CAAE,GAAEL,MAAM,CAACC,IAAK,qBAAoB,EAAE,CAClD,UAASD,MAAM,CAACC,IAAK,wDAAuD,EAC5E,4DAA2D,EAC5D,wEAAwE,CAC3E,CAAC;MACN;MACAJ,eAAe,CAACK,GAAG,CAACF,MAAM,CAAC;IAC/B;EACJ,CAAC,CAAC;EACF,IAAI,CAACL,kBAAkB,CAACW,GAAG,CAAC,MAAM,CAAC,IAAI,CAACX,kBAAkB,CAACW,GAAG,CAAC,YAAY,CAAC,IAAI,CAACX,kBAAkB,CAACW,GAAG,CAAC,WAAW,CAAC,EAAE;IAClH,KAAK,IAAIC,IAAI,IAAIV,eAAe,EAAC;MAC7B,IAAIU,IAAI,CAACN,IAAI,KAAK,OAAO,IAAI,CACzB,MAAM,EACN,YAAY,EACZ,WAAW,CACd,CAACG,QAAQ,CAACG,IAAI,CAACJ,MAAM,CAAC,EAAE;QACrB,IAAI,CAACR,kBAAkB,CAACW,GAAG,CAACC,IAAI,CAACJ,MAAM,CAAC,EAAE;UACtC,MAAMI,IAAI,CAACC,KAAK,CAAE,YAAWD,IAAI,CAACJ,MAAO,0CAAyCI,IAAI,CAACJ,MAAO,0BAAyB,CAAC;QAC5H;MACJ,CAAC,MAAM,IAAII,IAAI,CAACN,IAAI,KAAK,YAAY,EAAE;QACnC,IAAI,CAACN,kBAAkB,CAACW,GAAG,CAAC,WAAW,CAAC,EAAE;UACtC,MAAMC,IAAI,CAACC,KAAK,CAAC,6DAA6D,CAAC;QACnF;MACJ,CAAC,MAAM,IAAID,IAAI,CAACN,IAAI,KAAK,UAAU,EAAE;QACjC,IAAI,CAACN,kBAAkB,CAACW,GAAG,CAAC,WAAW,CAAC,EAAE;UACtC,MAAMC,IAAI,CAACC,KAAK,CAAC,2DAA2D,CAAC;QACjF;MACJ;IACJ;EACJ;EACA,OAAO;IACHb,kBAAkB;IAClBG;EACJ,CAAC;AACL"},"metadata":{},"sourceType":"script","externalDependencies":[]}