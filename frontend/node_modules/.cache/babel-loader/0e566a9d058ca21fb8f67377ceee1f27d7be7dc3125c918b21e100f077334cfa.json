{"ast":null,"code":"/*!\n * normalize-path <https://github.com/jonschlinkert/normalize-path>\n *\n * Copyright (c) 2014-2018, Jon Schlinkert.\n * Released under the MIT License.\n */\n\nmodule.exports = function (path, stripTrailing) {\n  if (typeof path !== 'string') {\n    throw new TypeError('expected path to be a string');\n  }\n  if (path === '\\\\' || path === '/') return '/';\n  var len = path.length;\n  if (len <= 1) return path;\n\n  // ensure that win32 namespaces has two leading slashes, so that the path is\n  // handled properly by the win32 version of path.parse() after being normalized\n  // https://msdn.microsoft.com/library/windows/desktop/aa365247(v=vs.85).aspx#namespaces\n  var prefix = '';\n  if (len > 4 && path[3] === '\\\\') {\n    var ch = path[2];\n    if ((ch === '?' || ch === '.') && path.slice(0, 2) === '\\\\\\\\') {\n      path = path.slice(2);\n      prefix = '//';\n    }\n  }\n  var segs = path.split(/[/\\\\]+/);\n  if (stripTrailing !== false && segs[segs.length - 1] === '') {\n    segs.pop();\n  }\n  return prefix + segs.join('/');\n};","map":{"version":3,"names":["module","exports","path","stripTrailing","TypeError","len","length","prefix","ch","slice","segs","split","pop","join"],"sources":["D:/WEB-PROJECT/Schwarz/frontend/node_modules/normalize-path/index.js"],"sourcesContent":["/*!\n * normalize-path <https://github.com/jonschlinkert/normalize-path>\n *\n * Copyright (c) 2014-2018, Jon Schlinkert.\n * Released under the MIT License.\n */\n\nmodule.exports = function(path, stripTrailing) {\n  if (typeof path !== 'string') {\n    throw new TypeError('expected path to be a string');\n  }\n\n  if (path === '\\\\' || path === '/') return '/';\n\n  var len = path.length;\n  if (len <= 1) return path;\n\n  // ensure that win32 namespaces has two leading slashes, so that the path is\n  // handled properly by the win32 version of path.parse() after being normalized\n  // https://msdn.microsoft.com/library/windows/desktop/aa365247(v=vs.85).aspx#namespaces\n  var prefix = '';\n  if (len > 4 && path[3] === '\\\\') {\n    var ch = path[2];\n    if ((ch === '?' || ch === '.') && path.slice(0, 2) === '\\\\\\\\') {\n      path = path.slice(2);\n      prefix = '//';\n    }\n  }\n\n  var segs = path.split(/[/\\\\]+/);\n  if (stripTrailing !== false && segs[segs.length - 1] === '') {\n    segs.pop();\n  }\n  return prefix + segs.join('/');\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AAEAA,MAAM,CAACC,OAAO,GAAG,UAASC,IAAI,EAAEC,aAAa,EAAE;EAC7C,IAAI,OAAOD,IAAI,KAAK,QAAQ,EAAE;IAC5B,MAAM,IAAIE,SAAS,CAAC,8BAA8B,CAAC;EACrD;EAEA,IAAIF,IAAI,KAAK,IAAI,IAAIA,IAAI,KAAK,GAAG,EAAE,OAAO,GAAG;EAE7C,IAAIG,GAAG,GAAGH,IAAI,CAACI,MAAM;EACrB,IAAID,GAAG,IAAI,CAAC,EAAE,OAAOH,IAAI;;EAEzB;EACA;EACA;EACA,IAAIK,MAAM,GAAG,EAAE;EACf,IAAIF,GAAG,GAAG,CAAC,IAAIH,IAAI,CAAC,CAAC,CAAC,KAAK,IAAI,EAAE;IAC/B,IAAIM,EAAE,GAAGN,IAAI,CAAC,CAAC,CAAC;IAChB,IAAI,CAACM,EAAE,KAAK,GAAG,IAAIA,EAAE,KAAK,GAAG,KAAKN,IAAI,CAACO,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,MAAM,EAAE;MAC7DP,IAAI,GAAGA,IAAI,CAACO,KAAK,CAAC,CAAC,CAAC;MACpBF,MAAM,GAAG,IAAI;IACf;EACF;EAEA,IAAIG,IAAI,GAAGR,IAAI,CAACS,KAAK,CAAC,QAAQ,CAAC;EAC/B,IAAIR,aAAa,KAAK,KAAK,IAAIO,IAAI,CAACA,IAAI,CAACJ,MAAM,GAAG,CAAC,CAAC,KAAK,EAAE,EAAE;IAC3DI,IAAI,CAACE,GAAG,CAAC,CAAC;EACZ;EACA,OAAOL,MAAM,GAAGG,IAAI,CAACG,IAAI,CAAC,GAAG,CAAC;AAChC,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}