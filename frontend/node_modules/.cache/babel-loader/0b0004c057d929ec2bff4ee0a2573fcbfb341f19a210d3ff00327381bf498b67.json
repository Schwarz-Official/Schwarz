{"ast":null,"code":"\"use strict\";\n\nvar minus = \"-\".charCodeAt(0);\nvar plus = \"+\".charCodeAt(0);\nvar dot = \".\".charCodeAt(0);\nvar exp = \"e\".charCodeAt(0);\nvar EXP = \"E\".charCodeAt(0);\n// Check if three code points would start a number\n// https://www.w3.org/TR/css-syntax-3/#starts-with-a-number\nfunction likeNumber(value) {\n  var code = value.charCodeAt(0);\n  var nextCode;\n  if (code === plus || code === minus) {\n    nextCode = value.charCodeAt(1);\n    if (nextCode >= 48 && nextCode <= 57) {\n      return true;\n    }\n    var nextNextCode = value.charCodeAt(2);\n    if (nextCode === dot && nextNextCode >= 48 && nextNextCode <= 57) {\n      return true;\n    }\n    return false;\n  }\n  if (code === dot) {\n    nextCode = value.charCodeAt(1);\n    if (nextCode >= 48 && nextCode <= 57) {\n      return true;\n    }\n    return false;\n  }\n  if (code >= 48 && code <= 57) {\n    return true;\n  }\n  return false;\n}\n// Consume a number\n// https://www.w3.org/TR/css-syntax-3/#consume-number\nmodule.exports = function (value) {\n  var pos = 0;\n  var length = value.length;\n  var code;\n  var nextCode;\n  var nextNextCode;\n  if (length === 0 || !likeNumber(value)) {\n    return false;\n  }\n  code = value.charCodeAt(pos);\n  if (code === plus || code === minus) {\n    pos++;\n  }\n  while (pos < length) {\n    code = value.charCodeAt(pos);\n    if (code < 48 || code > 57) {\n      break;\n    }\n    pos += 1;\n  }\n  code = value.charCodeAt(pos);\n  nextCode = value.charCodeAt(pos + 1);\n  if (code === dot && nextCode >= 48 && nextCode <= 57) {\n    pos += 2;\n    while (pos < length) {\n      code = value.charCodeAt(pos);\n      if (code < 48 || code > 57) {\n        break;\n      }\n      pos += 1;\n    }\n  }\n  code = value.charCodeAt(pos);\n  nextCode = value.charCodeAt(pos + 1);\n  nextNextCode = value.charCodeAt(pos + 2);\n  if ((code === exp || code === EXP) && (nextCode >= 48 && nextCode <= 57 || (nextCode === plus || nextCode === minus) && nextNextCode >= 48 && nextNextCode <= 57)) {\n    pos += nextCode === plus || nextCode === minus ? 3 : 2;\n    while (pos < length) {\n      code = value.charCodeAt(pos);\n      if (code < 48 || code > 57) {\n        break;\n      }\n      pos += 1;\n    }\n  }\n  return {\n    number: value.slice(0, pos),\n    unit: value.slice(pos)\n  };\n};","map":{"version":3,"names":["minus","charCodeAt","plus","dot","exp","EXP","likeNumber","value","code","nextCode","nextNextCode","module","exports","pos","length","number","slice","unit"],"sources":["D:/WEB-PROJECT/Schwarz/frontend/node_modules/tailwindcss/lib/value-parser/unit.js"],"sourcesContent":["\"use strict\";\nvar minus = \"-\".charCodeAt(0);\nvar plus = \"+\".charCodeAt(0);\nvar dot = \".\".charCodeAt(0);\nvar exp = \"e\".charCodeAt(0);\nvar EXP = \"E\".charCodeAt(0);\n// Check if three code points would start a number\n// https://www.w3.org/TR/css-syntax-3/#starts-with-a-number\nfunction likeNumber(value) {\n    var code = value.charCodeAt(0);\n    var nextCode;\n    if (code === plus || code === minus) {\n        nextCode = value.charCodeAt(1);\n        if (nextCode >= 48 && nextCode <= 57) {\n            return true;\n        }\n        var nextNextCode = value.charCodeAt(2);\n        if (nextCode === dot && nextNextCode >= 48 && nextNextCode <= 57) {\n            return true;\n        }\n        return false;\n    }\n    if (code === dot) {\n        nextCode = value.charCodeAt(1);\n        if (nextCode >= 48 && nextCode <= 57) {\n            return true;\n        }\n        return false;\n    }\n    if (code >= 48 && code <= 57) {\n        return true;\n    }\n    return false;\n}\n// Consume a number\n// https://www.w3.org/TR/css-syntax-3/#consume-number\nmodule.exports = function(value) {\n    var pos = 0;\n    var length = value.length;\n    var code;\n    var nextCode;\n    var nextNextCode;\n    if (length === 0 || !likeNumber(value)) {\n        return false;\n    }\n    code = value.charCodeAt(pos);\n    if (code === plus || code === minus) {\n        pos++;\n    }\n    while(pos < length){\n        code = value.charCodeAt(pos);\n        if (code < 48 || code > 57) {\n            break;\n        }\n        pos += 1;\n    }\n    code = value.charCodeAt(pos);\n    nextCode = value.charCodeAt(pos + 1);\n    if (code === dot && nextCode >= 48 && nextCode <= 57) {\n        pos += 2;\n        while(pos < length){\n            code = value.charCodeAt(pos);\n            if (code < 48 || code > 57) {\n                break;\n            }\n            pos += 1;\n        }\n    }\n    code = value.charCodeAt(pos);\n    nextCode = value.charCodeAt(pos + 1);\n    nextNextCode = value.charCodeAt(pos + 2);\n    if ((code === exp || code === EXP) && (nextCode >= 48 && nextCode <= 57 || (nextCode === plus || nextCode === minus) && nextNextCode >= 48 && nextNextCode <= 57)) {\n        pos += nextCode === plus || nextCode === minus ? 3 : 2;\n        while(pos < length){\n            code = value.charCodeAt(pos);\n            if (code < 48 || code > 57) {\n                break;\n            }\n            pos += 1;\n        }\n    }\n    return {\n        number: value.slice(0, pos),\n        unit: value.slice(pos)\n    };\n};\n"],"mappings":"AAAA,YAAY;;AACZ,IAAIA,KAAK,GAAG,GAAG,CAACC,UAAU,CAAC,CAAC,CAAC;AAC7B,IAAIC,IAAI,GAAG,GAAG,CAACD,UAAU,CAAC,CAAC,CAAC;AAC5B,IAAIE,GAAG,GAAG,GAAG,CAACF,UAAU,CAAC,CAAC,CAAC;AAC3B,IAAIG,GAAG,GAAG,GAAG,CAACH,UAAU,CAAC,CAAC,CAAC;AAC3B,IAAII,GAAG,GAAG,GAAG,CAACJ,UAAU,CAAC,CAAC,CAAC;AAC3B;AACA;AACA,SAASK,UAAUA,CAACC,KAAK,EAAE;EACvB,IAAIC,IAAI,GAAGD,KAAK,CAACN,UAAU,CAAC,CAAC,CAAC;EAC9B,IAAIQ,QAAQ;EACZ,IAAID,IAAI,KAAKN,IAAI,IAAIM,IAAI,KAAKR,KAAK,EAAE;IACjCS,QAAQ,GAAGF,KAAK,CAACN,UAAU,CAAC,CAAC,CAAC;IAC9B,IAAIQ,QAAQ,IAAI,EAAE,IAAIA,QAAQ,IAAI,EAAE,EAAE;MAClC,OAAO,IAAI;IACf;IACA,IAAIC,YAAY,GAAGH,KAAK,CAACN,UAAU,CAAC,CAAC,CAAC;IACtC,IAAIQ,QAAQ,KAAKN,GAAG,IAAIO,YAAY,IAAI,EAAE,IAAIA,YAAY,IAAI,EAAE,EAAE;MAC9D,OAAO,IAAI;IACf;IACA,OAAO,KAAK;EAChB;EACA,IAAIF,IAAI,KAAKL,GAAG,EAAE;IACdM,QAAQ,GAAGF,KAAK,CAACN,UAAU,CAAC,CAAC,CAAC;IAC9B,IAAIQ,QAAQ,IAAI,EAAE,IAAIA,QAAQ,IAAI,EAAE,EAAE;MAClC,OAAO,IAAI;IACf;IACA,OAAO,KAAK;EAChB;EACA,IAAID,IAAI,IAAI,EAAE,IAAIA,IAAI,IAAI,EAAE,EAAE;IAC1B,OAAO,IAAI;EACf;EACA,OAAO,KAAK;AAChB;AACA;AACA;AACAG,MAAM,CAACC,OAAO,GAAG,UAASL,KAAK,EAAE;EAC7B,IAAIM,GAAG,GAAG,CAAC;EACX,IAAIC,MAAM,GAAGP,KAAK,CAACO,MAAM;EACzB,IAAIN,IAAI;EACR,IAAIC,QAAQ;EACZ,IAAIC,YAAY;EAChB,IAAII,MAAM,KAAK,CAAC,IAAI,CAACR,UAAU,CAACC,KAAK,CAAC,EAAE;IACpC,OAAO,KAAK;EAChB;EACAC,IAAI,GAAGD,KAAK,CAACN,UAAU,CAACY,GAAG,CAAC;EAC5B,IAAIL,IAAI,KAAKN,IAAI,IAAIM,IAAI,KAAKR,KAAK,EAAE;IACjCa,GAAG,EAAE;EACT;EACA,OAAMA,GAAG,GAAGC,MAAM,EAAC;IACfN,IAAI,GAAGD,KAAK,CAACN,UAAU,CAACY,GAAG,CAAC;IAC5B,IAAIL,IAAI,GAAG,EAAE,IAAIA,IAAI,GAAG,EAAE,EAAE;MACxB;IACJ;IACAK,GAAG,IAAI,CAAC;EACZ;EACAL,IAAI,GAAGD,KAAK,CAACN,UAAU,CAACY,GAAG,CAAC;EAC5BJ,QAAQ,GAAGF,KAAK,CAACN,UAAU,CAACY,GAAG,GAAG,CAAC,CAAC;EACpC,IAAIL,IAAI,KAAKL,GAAG,IAAIM,QAAQ,IAAI,EAAE,IAAIA,QAAQ,IAAI,EAAE,EAAE;IAClDI,GAAG,IAAI,CAAC;IACR,OAAMA,GAAG,GAAGC,MAAM,EAAC;MACfN,IAAI,GAAGD,KAAK,CAACN,UAAU,CAACY,GAAG,CAAC;MAC5B,IAAIL,IAAI,GAAG,EAAE,IAAIA,IAAI,GAAG,EAAE,EAAE;QACxB;MACJ;MACAK,GAAG,IAAI,CAAC;IACZ;EACJ;EACAL,IAAI,GAAGD,KAAK,CAACN,UAAU,CAACY,GAAG,CAAC;EAC5BJ,QAAQ,GAAGF,KAAK,CAACN,UAAU,CAACY,GAAG,GAAG,CAAC,CAAC;EACpCH,YAAY,GAAGH,KAAK,CAACN,UAAU,CAACY,GAAG,GAAG,CAAC,CAAC;EACxC,IAAI,CAACL,IAAI,KAAKJ,GAAG,IAAII,IAAI,KAAKH,GAAG,MAAMI,QAAQ,IAAI,EAAE,IAAIA,QAAQ,IAAI,EAAE,IAAI,CAACA,QAAQ,KAAKP,IAAI,IAAIO,QAAQ,KAAKT,KAAK,KAAKU,YAAY,IAAI,EAAE,IAAIA,YAAY,IAAI,EAAE,CAAC,EAAE;IAC/JG,GAAG,IAAIJ,QAAQ,KAAKP,IAAI,IAAIO,QAAQ,KAAKT,KAAK,GAAG,CAAC,GAAG,CAAC;IACtD,OAAMa,GAAG,GAAGC,MAAM,EAAC;MACfN,IAAI,GAAGD,KAAK,CAACN,UAAU,CAACY,GAAG,CAAC;MAC5B,IAAIL,IAAI,GAAG,EAAE,IAAIA,IAAI,GAAG,EAAE,EAAE;QACxB;MACJ;MACAK,GAAG,IAAI,CAAC;IACZ;EACJ;EACA,OAAO;IACHE,MAAM,EAAER,KAAK,CAACS,KAAK,CAAC,CAAC,EAAEH,GAAG,CAAC;IAC3BI,IAAI,EAAEV,KAAK,CAACS,KAAK,CAACH,GAAG;EACzB,CAAC;AACL,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}