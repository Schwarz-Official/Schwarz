{"ast":null,"code":"'use strict';\n\nlet Container = require('./container');\nlet Parser = require('./parser');\nlet Input = require('./input');\nfunction parse(css, opts) {\n  let input = new Input(css, opts);\n  let parser = new Parser(input);\n  try {\n    parser.parse();\n  } catch (e) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (e.name === 'CssSyntaxError' && opts && opts.from) {\n        if (/\\.scss$/i.test(opts.from)) {\n          e.message += '\\nYou tried to parse SCSS with ' + 'the standard CSS parser; ' + 'try again with the postcss-scss parser';\n        } else if (/\\.sass/i.test(opts.from)) {\n          e.message += '\\nYou tried to parse Sass with ' + 'the standard CSS parser; ' + 'try again with the postcss-sass parser';\n        } else if (/\\.less$/i.test(opts.from)) {\n          e.message += '\\nYou tried to parse Less with ' + 'the standard CSS parser; ' + 'try again with the postcss-less parser';\n        }\n      }\n    }\n    throw e;\n  }\n  return parser.root;\n}\nmodule.exports = parse;\nparse.default = parse;\nContainer.registerParse(parse);","map":{"version":3,"names":["Container","require","Parser","Input","parse","css","opts","input","parser","e","process","env","NODE_ENV","name","from","test","message","root","module","exports","default","registerParse"],"sources":["D:/WEB-PROJECT/Schwarz/frontend/node_modules/postcss/lib/parse.js"],"sourcesContent":["'use strict'\n\nlet Container = require('./container')\nlet Parser = require('./parser')\nlet Input = require('./input')\n\nfunction parse(css, opts) {\n  let input = new Input(css, opts)\n  let parser = new Parser(input)\n  try {\n    parser.parse()\n  } catch (e) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (e.name === 'CssSyntaxError' && opts && opts.from) {\n        if (/\\.scss$/i.test(opts.from)) {\n          e.message +=\n            '\\nYou tried to parse SCSS with ' +\n            'the standard CSS parser; ' +\n            'try again with the postcss-scss parser'\n        } else if (/\\.sass/i.test(opts.from)) {\n          e.message +=\n            '\\nYou tried to parse Sass with ' +\n            'the standard CSS parser; ' +\n            'try again with the postcss-sass parser'\n        } else if (/\\.less$/i.test(opts.from)) {\n          e.message +=\n            '\\nYou tried to parse Less with ' +\n            'the standard CSS parser; ' +\n            'try again with the postcss-less parser'\n        }\n      }\n    }\n    throw e\n  }\n\n  return parser.root\n}\n\nmodule.exports = parse\nparse.default = parse\n\nContainer.registerParse(parse)\n"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,SAAS,GAAGC,OAAO,CAAC,aAAa,CAAC;AACtC,IAAIC,MAAM,GAAGD,OAAO,CAAC,UAAU,CAAC;AAChC,IAAIE,KAAK,GAAGF,OAAO,CAAC,SAAS,CAAC;AAE9B,SAASG,KAAKA,CAACC,GAAG,EAAEC,IAAI,EAAE;EACxB,IAAIC,KAAK,GAAG,IAAIJ,KAAK,CAACE,GAAG,EAAEC,IAAI,CAAC;EAChC,IAAIE,MAAM,GAAG,IAAIN,MAAM,CAACK,KAAK,CAAC;EAC9B,IAAI;IACFC,MAAM,CAACJ,KAAK,CAAC,CAAC;EAChB,CAAC,CAAC,OAAOK,CAAC,EAAE;IACV,IAAIC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;MACzC,IAAIH,CAAC,CAACI,IAAI,KAAK,gBAAgB,IAAIP,IAAI,IAAIA,IAAI,CAACQ,IAAI,EAAE;QACpD,IAAI,UAAU,CAACC,IAAI,CAACT,IAAI,CAACQ,IAAI,CAAC,EAAE;UAC9BL,CAAC,CAACO,OAAO,IACP,iCAAiC,GACjC,2BAA2B,GAC3B,wCAAwC;QAC5C,CAAC,MAAM,IAAI,SAAS,CAACD,IAAI,CAACT,IAAI,CAACQ,IAAI,CAAC,EAAE;UACpCL,CAAC,CAACO,OAAO,IACP,iCAAiC,GACjC,2BAA2B,GAC3B,wCAAwC;QAC5C,CAAC,MAAM,IAAI,UAAU,CAACD,IAAI,CAACT,IAAI,CAACQ,IAAI,CAAC,EAAE;UACrCL,CAAC,CAACO,OAAO,IACP,iCAAiC,GACjC,2BAA2B,GAC3B,wCAAwC;QAC5C;MACF;IACF;IACA,MAAMP,CAAC;EACT;EAEA,OAAOD,MAAM,CAACS,IAAI;AACpB;AAEAC,MAAM,CAACC,OAAO,GAAGf,KAAK;AACtBA,KAAK,CAACgB,OAAO,GAAGhB,KAAK;AAErBJ,SAAS,CAACqB,aAAa,CAACjB,KAAK,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}