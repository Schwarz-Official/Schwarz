{"ast":null,"code":"\"use strict\";\n\nvar __spreadArrays = this && this.__spreadArrays || function () {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n  for (var r = Array(s), k = 0, i = 0; i < il; i++) for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++) r[k] = a[j];\n  return r;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Checker = exports.createCheckers = void 0;\nvar types_1 = require(\"./types\");\nvar util_1 = require(\"./util\");\n/**\n * Export functions used to define interfaces.\n */\nvar types_2 = require(\"./types\");\nObject.defineProperty(exports, \"TArray\", {\n  enumerable: true,\n  get: function () {\n    return types_2.TArray;\n  }\n});\nObject.defineProperty(exports, \"TEnumType\", {\n  enumerable: true,\n  get: function () {\n    return types_2.TEnumType;\n  }\n});\nObject.defineProperty(exports, \"TEnumLiteral\", {\n  enumerable: true,\n  get: function () {\n    return types_2.TEnumLiteral;\n  }\n});\nObject.defineProperty(exports, \"TFunc\", {\n  enumerable: true,\n  get: function () {\n    return types_2.TFunc;\n  }\n});\nObject.defineProperty(exports, \"TIface\", {\n  enumerable: true,\n  get: function () {\n    return types_2.TIface;\n  }\n});\nObject.defineProperty(exports, \"TLiteral\", {\n  enumerable: true,\n  get: function () {\n    return types_2.TLiteral;\n  }\n});\nObject.defineProperty(exports, \"TName\", {\n  enumerable: true,\n  get: function () {\n    return types_2.TName;\n  }\n});\nObject.defineProperty(exports, \"TOptional\", {\n  enumerable: true,\n  get: function () {\n    return types_2.TOptional;\n  }\n});\nObject.defineProperty(exports, \"TParam\", {\n  enumerable: true,\n  get: function () {\n    return types_2.TParam;\n  }\n});\nObject.defineProperty(exports, \"TParamList\", {\n  enumerable: true,\n  get: function () {\n    return types_2.TParamList;\n  }\n});\nObject.defineProperty(exports, \"TProp\", {\n  enumerable: true,\n  get: function () {\n    return types_2.TProp;\n  }\n});\nObject.defineProperty(exports, \"TTuple\", {\n  enumerable: true,\n  get: function () {\n    return types_2.TTuple;\n  }\n});\nObject.defineProperty(exports, \"TType\", {\n  enumerable: true,\n  get: function () {\n    return types_2.TType;\n  }\n});\nObject.defineProperty(exports, \"TUnion\", {\n  enumerable: true,\n  get: function () {\n    return types_2.TUnion;\n  }\n});\nObject.defineProperty(exports, \"TIntersection\", {\n  enumerable: true,\n  get: function () {\n    return types_2.TIntersection;\n  }\n});\nObject.defineProperty(exports, \"array\", {\n  enumerable: true,\n  get: function () {\n    return types_2.array;\n  }\n});\nObject.defineProperty(exports, \"enumlit\", {\n  enumerable: true,\n  get: function () {\n    return types_2.enumlit;\n  }\n});\nObject.defineProperty(exports, \"enumtype\", {\n  enumerable: true,\n  get: function () {\n    return types_2.enumtype;\n  }\n});\nObject.defineProperty(exports, \"func\", {\n  enumerable: true,\n  get: function () {\n    return types_2.func;\n  }\n});\nObject.defineProperty(exports, \"iface\", {\n  enumerable: true,\n  get: function () {\n    return types_2.iface;\n  }\n});\nObject.defineProperty(exports, \"lit\", {\n  enumerable: true,\n  get: function () {\n    return types_2.lit;\n  }\n});\nObject.defineProperty(exports, \"name\", {\n  enumerable: true,\n  get: function () {\n    return types_2.name;\n  }\n});\nObject.defineProperty(exports, \"opt\", {\n  enumerable: true,\n  get: function () {\n    return types_2.opt;\n  }\n});\nObject.defineProperty(exports, \"param\", {\n  enumerable: true,\n  get: function () {\n    return types_2.param;\n  }\n});\nObject.defineProperty(exports, \"tuple\", {\n  enumerable: true,\n  get: function () {\n    return types_2.tuple;\n  }\n});\nObject.defineProperty(exports, \"union\", {\n  enumerable: true,\n  get: function () {\n    return types_2.union;\n  }\n});\nObject.defineProperty(exports, \"intersection\", {\n  enumerable: true,\n  get: function () {\n    return types_2.intersection;\n  }\n});\nObject.defineProperty(exports, \"BasicType\", {\n  enumerable: true,\n  get: function () {\n    return types_2.BasicType;\n  }\n});\nvar util_2 = require(\"./util\");\nObject.defineProperty(exports, \"VError\", {\n  enumerable: true,\n  get: function () {\n    return util_2.VError;\n  }\n});\n/**\n * Takes one of more type suites (e.g. a module generated by `ts-interface-builder`), and combines\n * them into a suite of interface checkers. If a type is used by name, that name should be present\n * among the passed-in type suites.\n *\n * The returned object maps type names to Checker objects.\n */\nfunction createCheckers() {\n  var typeSuite = [];\n  for (var _i = 0; _i < arguments.length; _i++) {\n    typeSuite[_i] = arguments[_i];\n  }\n  var fullSuite = Object.assign.apply(Object, __spreadArrays([{}, types_1.basicTypes], typeSuite));\n  var checkers = {};\n  for (var _a = 0, typeSuite_1 = typeSuite; _a < typeSuite_1.length; _a++) {\n    var suite_1 = typeSuite_1[_a];\n    for (var _b = 0, _c = Object.keys(suite_1); _b < _c.length; _b++) {\n      var name = _c[_b];\n      checkers[name] = new Checker(fullSuite, suite_1[name]);\n    }\n  }\n  return checkers;\n}\nexports.createCheckers = createCheckers;\n/**\n * Checker implements validation of objects, and also includes accessors to validate method calls.\n * Checkers should be created using `createCheckers()`.\n */\nvar Checker = /** @class */function () {\n  // Create checkers by using `createCheckers()` function.\n  function Checker(suite, ttype, _path) {\n    if (_path === void 0) {\n      _path = 'value';\n    }\n    this.suite = suite;\n    this.ttype = ttype;\n    this._path = _path;\n    this.props = new Map();\n    if (ttype instanceof types_1.TIface) {\n      for (var _i = 0, _a = ttype.props; _i < _a.length; _i++) {\n        var p = _a[_i];\n        this.props.set(p.name, p.ttype);\n      }\n    }\n    this.checkerPlain = this.ttype.getChecker(suite, false);\n    this.checkerStrict = this.ttype.getChecker(suite, true);\n  }\n  /**\n   * Set the path to report in errors, instead of the default \"value\". (E.g. if the Checker is for\n   * a \"person\" interface, set path to \"person\" to report e.g. \"person.name is not a string\".)\n   */\n  Checker.prototype.setReportedPath = function (path) {\n    this._path = path;\n  };\n  /**\n   * Check that the given value satisfies this checker's type, or throw Error.\n   */\n  Checker.prototype.check = function (value) {\n    return this._doCheck(this.checkerPlain, value);\n  };\n  /**\n   * A fast check for whether or not the given value satisfies this Checker's type. This returns\n   * true or false, does not produce an error message, and is fast both on success and on failure.\n   */\n  Checker.prototype.test = function (value) {\n    return this.checkerPlain(value, new util_1.NoopContext());\n  };\n  /**\n   * Returns an error object describing the errors if the given value does not satisfy this\n   * Checker's type, or null if it does.\n   */\n  Checker.prototype.validate = function (value) {\n    return this._doValidate(this.checkerPlain, value);\n  };\n  /**\n   * Check that the given value satisfies this checker's type strictly. This checks that objects\n   * and tuples have no extra members. Note that this prevents backward compatibility, so usually\n   * a plain check() is more appropriate.\n   */\n  Checker.prototype.strictCheck = function (value) {\n    return this._doCheck(this.checkerStrict, value);\n  };\n  /**\n   * A fast strict check for whether or not the given value satisfies this Checker's type. Returns\n   * true or false, does not produce an error message, and is fast both on success and on failure.\n   */\n  Checker.prototype.strictTest = function (value) {\n    return this.checkerStrict(value, new util_1.NoopContext());\n  };\n  /**\n   * Returns an error object describing the errors if the given value does not satisfy this\n   * Checker's type strictly, or null if it does.\n   */\n  Checker.prototype.strictValidate = function (value) {\n    return this._doValidate(this.checkerStrict, value);\n  };\n  /**\n   * If this checker is for an interface, returns a Checker for the type required for the given\n   * property of this interface.\n   */\n  Checker.prototype.getProp = function (prop) {\n    var ttype = this.props.get(prop);\n    if (!ttype) {\n      throw new Error(\"Type has no property \" + prop);\n    }\n    return new Checker(this.suite, ttype, this._path + \".\" + prop);\n  };\n  /**\n   * If this checker is for an interface, returns a Checker for the argument-list required to call\n   * the given method of this interface. E.g. if this Checker is for the interface:\n   *    interface Foo {\n   *      find(s: string, pos?: number): number;\n   *    }\n   * Then methodArgs(\"find\").check(...) will succeed for [\"foo\"] and [\"foo\", 3], but not for [17].\n   */\n  Checker.prototype.methodArgs = function (methodName) {\n    var tfunc = this._getMethod(methodName);\n    return new Checker(this.suite, tfunc.paramList);\n  };\n  /**\n   * If this checker is for an interface, returns a Checker for the return value of the given\n   * method of this interface.\n   */\n  Checker.prototype.methodResult = function (methodName) {\n    var tfunc = this._getMethod(methodName);\n    return new Checker(this.suite, tfunc.result);\n  };\n  /**\n   * If this checker is for a function, returns a Checker for its argument-list.\n   */\n  Checker.prototype.getArgs = function () {\n    if (!(this.ttype instanceof types_1.TFunc)) {\n      throw new Error(\"getArgs() applied to non-function\");\n    }\n    return new Checker(this.suite, this.ttype.paramList);\n  };\n  /**\n   * If this checker is for a function, returns a Checker for its result.\n   */\n  Checker.prototype.getResult = function () {\n    if (!(this.ttype instanceof types_1.TFunc)) {\n      throw new Error(\"getResult() applied to non-function\");\n    }\n    return new Checker(this.suite, this.ttype.result);\n  };\n  /**\n   * Return the type for which this is a checker.\n   */\n  Checker.prototype.getType = function () {\n    return this.ttype;\n  };\n  /**\n   * Actual implementation of check() and strictCheck().\n   */\n  Checker.prototype._doCheck = function (checkerFunc, value) {\n    var noopCtx = new util_1.NoopContext();\n    if (!checkerFunc(value, noopCtx)) {\n      var detailCtx = new util_1.DetailContext();\n      checkerFunc(value, detailCtx);\n      throw detailCtx.getError(this._path);\n    }\n  };\n  Checker.prototype._doValidate = function (checkerFunc, value) {\n    var noopCtx = new util_1.NoopContext();\n    if (checkerFunc(value, noopCtx)) {\n      return null;\n    }\n    var detailCtx = new util_1.DetailContext();\n    checkerFunc(value, detailCtx);\n    return detailCtx.getErrorDetail(this._path);\n  };\n  Checker.prototype._getMethod = function (methodName) {\n    var ttype = this.props.get(methodName);\n    if (!ttype) {\n      throw new Error(\"Type has no property \" + methodName);\n    }\n    if (!(ttype instanceof types_1.TFunc)) {\n      throw new Error(\"Property \" + methodName + \" is not a method\");\n    }\n    return ttype;\n  };\n  return Checker;\n}();\nexports.Checker = Checker;","map":{"version":3,"names":["__spreadArrays","s","i","il","arguments","length","r","Array","k","a","j","jl","Object","defineProperty","exports","value","Checker","createCheckers","types_1","require","util_1","types_2","enumerable","get","TArray","TEnumType","TEnumLiteral","TFunc","TIface","TLiteral","TName","TOptional","TParam","TParamList","TProp","TTuple","TType","TUnion","TIntersection","array","enumlit","enumtype","func","iface","lit","name","opt","param","tuple","union","intersection","BasicType","util_2","VError","typeSuite","_i","fullSuite","assign","apply","basicTypes","checkers","_a","typeSuite_1","suite_1","_b","_c","keys","suite","ttype","_path","props","Map","p","set","checkerPlain","getChecker","checkerStrict","prototype","setReportedPath","path","check","_doCheck","test","NoopContext","validate","_doValidate","strictCheck","strictTest","strictValidate","getProp","prop","Error","methodArgs","methodName","tfunc","_getMethod","paramList","methodResult","result","getArgs","getResult","getType","checkerFunc","noopCtx","detailCtx","DetailContext","getError","getErrorDetail"],"sources":["D:/WEB-PROJECT/Schwarz/frontend/node_modules/ts-interface-checker/dist/index.js"],"sourcesContent":["\"use strict\";\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Checker = exports.createCheckers = void 0;\nvar types_1 = require(\"./types\");\nvar util_1 = require(\"./util\");\n/**\n * Export functions used to define interfaces.\n */\nvar types_2 = require(\"./types\");\nObject.defineProperty(exports, \"TArray\", { enumerable: true, get: function () { return types_2.TArray; } });\nObject.defineProperty(exports, \"TEnumType\", { enumerable: true, get: function () { return types_2.TEnumType; } });\nObject.defineProperty(exports, \"TEnumLiteral\", { enumerable: true, get: function () { return types_2.TEnumLiteral; } });\nObject.defineProperty(exports, \"TFunc\", { enumerable: true, get: function () { return types_2.TFunc; } });\nObject.defineProperty(exports, \"TIface\", { enumerable: true, get: function () { return types_2.TIface; } });\nObject.defineProperty(exports, \"TLiteral\", { enumerable: true, get: function () { return types_2.TLiteral; } });\nObject.defineProperty(exports, \"TName\", { enumerable: true, get: function () { return types_2.TName; } });\nObject.defineProperty(exports, \"TOptional\", { enumerable: true, get: function () { return types_2.TOptional; } });\nObject.defineProperty(exports, \"TParam\", { enumerable: true, get: function () { return types_2.TParam; } });\nObject.defineProperty(exports, \"TParamList\", { enumerable: true, get: function () { return types_2.TParamList; } });\nObject.defineProperty(exports, \"TProp\", { enumerable: true, get: function () { return types_2.TProp; } });\nObject.defineProperty(exports, \"TTuple\", { enumerable: true, get: function () { return types_2.TTuple; } });\nObject.defineProperty(exports, \"TType\", { enumerable: true, get: function () { return types_2.TType; } });\nObject.defineProperty(exports, \"TUnion\", { enumerable: true, get: function () { return types_2.TUnion; } });\nObject.defineProperty(exports, \"TIntersection\", { enumerable: true, get: function () { return types_2.TIntersection; } });\nObject.defineProperty(exports, \"array\", { enumerable: true, get: function () { return types_2.array; } });\nObject.defineProperty(exports, \"enumlit\", { enumerable: true, get: function () { return types_2.enumlit; } });\nObject.defineProperty(exports, \"enumtype\", { enumerable: true, get: function () { return types_2.enumtype; } });\nObject.defineProperty(exports, \"func\", { enumerable: true, get: function () { return types_2.func; } });\nObject.defineProperty(exports, \"iface\", { enumerable: true, get: function () { return types_2.iface; } });\nObject.defineProperty(exports, \"lit\", { enumerable: true, get: function () { return types_2.lit; } });\nObject.defineProperty(exports, \"name\", { enumerable: true, get: function () { return types_2.name; } });\nObject.defineProperty(exports, \"opt\", { enumerable: true, get: function () { return types_2.opt; } });\nObject.defineProperty(exports, \"param\", { enumerable: true, get: function () { return types_2.param; } });\nObject.defineProperty(exports, \"tuple\", { enumerable: true, get: function () { return types_2.tuple; } });\nObject.defineProperty(exports, \"union\", { enumerable: true, get: function () { return types_2.union; } });\nObject.defineProperty(exports, \"intersection\", { enumerable: true, get: function () { return types_2.intersection; } });\nObject.defineProperty(exports, \"BasicType\", { enumerable: true, get: function () { return types_2.BasicType; } });\nvar util_2 = require(\"./util\");\nObject.defineProperty(exports, \"VError\", { enumerable: true, get: function () { return util_2.VError; } });\n/**\n * Takes one of more type suites (e.g. a module generated by `ts-interface-builder`), and combines\n * them into a suite of interface checkers. If a type is used by name, that name should be present\n * among the passed-in type suites.\n *\n * The returned object maps type names to Checker objects.\n */\nfunction createCheckers() {\n    var typeSuite = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        typeSuite[_i] = arguments[_i];\n    }\n    var fullSuite = Object.assign.apply(Object, __spreadArrays([{}, types_1.basicTypes], typeSuite));\n    var checkers = {};\n    for (var _a = 0, typeSuite_1 = typeSuite; _a < typeSuite_1.length; _a++) {\n        var suite_1 = typeSuite_1[_a];\n        for (var _b = 0, _c = Object.keys(suite_1); _b < _c.length; _b++) {\n            var name = _c[_b];\n            checkers[name] = new Checker(fullSuite, suite_1[name]);\n        }\n    }\n    return checkers;\n}\nexports.createCheckers = createCheckers;\n/**\n * Checker implements validation of objects, and also includes accessors to validate method calls.\n * Checkers should be created using `createCheckers()`.\n */\nvar Checker = /** @class */ (function () {\n    // Create checkers by using `createCheckers()` function.\n    function Checker(suite, ttype, _path) {\n        if (_path === void 0) { _path = 'value'; }\n        this.suite = suite;\n        this.ttype = ttype;\n        this._path = _path;\n        this.props = new Map();\n        if (ttype instanceof types_1.TIface) {\n            for (var _i = 0, _a = ttype.props; _i < _a.length; _i++) {\n                var p = _a[_i];\n                this.props.set(p.name, p.ttype);\n            }\n        }\n        this.checkerPlain = this.ttype.getChecker(suite, false);\n        this.checkerStrict = this.ttype.getChecker(suite, true);\n    }\n    /**\n     * Set the path to report in errors, instead of the default \"value\". (E.g. if the Checker is for\n     * a \"person\" interface, set path to \"person\" to report e.g. \"person.name is not a string\".)\n     */\n    Checker.prototype.setReportedPath = function (path) {\n        this._path = path;\n    };\n    /**\n     * Check that the given value satisfies this checker's type, or throw Error.\n     */\n    Checker.prototype.check = function (value) { return this._doCheck(this.checkerPlain, value); };\n    /**\n     * A fast check for whether or not the given value satisfies this Checker's type. This returns\n     * true or false, does not produce an error message, and is fast both on success and on failure.\n     */\n    Checker.prototype.test = function (value) {\n        return this.checkerPlain(value, new util_1.NoopContext());\n    };\n    /**\n     * Returns an error object describing the errors if the given value does not satisfy this\n     * Checker's type, or null if it does.\n     */\n    Checker.prototype.validate = function (value) {\n        return this._doValidate(this.checkerPlain, value);\n    };\n    /**\n     * Check that the given value satisfies this checker's type strictly. This checks that objects\n     * and tuples have no extra members. Note that this prevents backward compatibility, so usually\n     * a plain check() is more appropriate.\n     */\n    Checker.prototype.strictCheck = function (value) { return this._doCheck(this.checkerStrict, value); };\n    /**\n     * A fast strict check for whether or not the given value satisfies this Checker's type. Returns\n     * true or false, does not produce an error message, and is fast both on success and on failure.\n     */\n    Checker.prototype.strictTest = function (value) {\n        return this.checkerStrict(value, new util_1.NoopContext());\n    };\n    /**\n     * Returns an error object describing the errors if the given value does not satisfy this\n     * Checker's type strictly, or null if it does.\n     */\n    Checker.prototype.strictValidate = function (value) {\n        return this._doValidate(this.checkerStrict, value);\n    };\n    /**\n     * If this checker is for an interface, returns a Checker for the type required for the given\n     * property of this interface.\n     */\n    Checker.prototype.getProp = function (prop) {\n        var ttype = this.props.get(prop);\n        if (!ttype) {\n            throw new Error(\"Type has no property \" + prop);\n        }\n        return new Checker(this.suite, ttype, this._path + \".\" + prop);\n    };\n    /**\n     * If this checker is for an interface, returns a Checker for the argument-list required to call\n     * the given method of this interface. E.g. if this Checker is for the interface:\n     *    interface Foo {\n     *      find(s: string, pos?: number): number;\n     *    }\n     * Then methodArgs(\"find\").check(...) will succeed for [\"foo\"] and [\"foo\", 3], but not for [17].\n     */\n    Checker.prototype.methodArgs = function (methodName) {\n        var tfunc = this._getMethod(methodName);\n        return new Checker(this.suite, tfunc.paramList);\n    };\n    /**\n     * If this checker is for an interface, returns a Checker for the return value of the given\n     * method of this interface.\n     */\n    Checker.prototype.methodResult = function (methodName) {\n        var tfunc = this._getMethod(methodName);\n        return new Checker(this.suite, tfunc.result);\n    };\n    /**\n     * If this checker is for a function, returns a Checker for its argument-list.\n     */\n    Checker.prototype.getArgs = function () {\n        if (!(this.ttype instanceof types_1.TFunc)) {\n            throw new Error(\"getArgs() applied to non-function\");\n        }\n        return new Checker(this.suite, this.ttype.paramList);\n    };\n    /**\n     * If this checker is for a function, returns a Checker for its result.\n     */\n    Checker.prototype.getResult = function () {\n        if (!(this.ttype instanceof types_1.TFunc)) {\n            throw new Error(\"getResult() applied to non-function\");\n        }\n        return new Checker(this.suite, this.ttype.result);\n    };\n    /**\n     * Return the type for which this is a checker.\n     */\n    Checker.prototype.getType = function () {\n        return this.ttype;\n    };\n    /**\n     * Actual implementation of check() and strictCheck().\n     */\n    Checker.prototype._doCheck = function (checkerFunc, value) {\n        var noopCtx = new util_1.NoopContext();\n        if (!checkerFunc(value, noopCtx)) {\n            var detailCtx = new util_1.DetailContext();\n            checkerFunc(value, detailCtx);\n            throw detailCtx.getError(this._path);\n        }\n    };\n    Checker.prototype._doValidate = function (checkerFunc, value) {\n        var noopCtx = new util_1.NoopContext();\n        if (checkerFunc(value, noopCtx)) {\n            return null;\n        }\n        var detailCtx = new util_1.DetailContext();\n        checkerFunc(value, detailCtx);\n        return detailCtx.getErrorDetail(this._path);\n    };\n    Checker.prototype._getMethod = function (methodName) {\n        var ttype = this.props.get(methodName);\n        if (!ttype) {\n            throw new Error(\"Type has no property \" + methodName);\n        }\n        if (!(ttype instanceof types_1.TFunc)) {\n            throw new Error(\"Property \" + methodName + \" is not a method\");\n        }\n        return ttype;\n    };\n    return Checker;\n}());\nexports.Checker = Checker;\n"],"mappings":"AAAA,YAAY;;AACZ,IAAIA,cAAc,GAAI,IAAI,IAAI,IAAI,CAACA,cAAc,IAAK,YAAY;EAC9D,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEC,CAAC,GAAG,CAAC,EAAEC,EAAE,GAAGC,SAAS,CAACC,MAAM,EAAEH,CAAC,GAAGC,EAAE,EAAED,CAAC,EAAE,EAAED,CAAC,IAAIG,SAAS,CAACF,CAAC,CAAC,CAACG,MAAM;EACnF,KAAK,IAAIC,CAAC,GAAGC,KAAK,CAACN,CAAC,CAAC,EAAEO,CAAC,GAAG,CAAC,EAAEN,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGC,EAAE,EAAED,CAAC,EAAE,EAC5C,KAAK,IAAIO,CAAC,GAAGL,SAAS,CAACF,CAAC,CAAC,EAAEQ,CAAC,GAAG,CAAC,EAAEC,EAAE,GAAGF,CAAC,CAACJ,MAAM,EAAEK,CAAC,GAAGC,EAAE,EAAED,CAAC,EAAE,EAAEF,CAAC,EAAE,EAC7DF,CAAC,CAACE,CAAC,CAAC,GAAGC,CAAC,CAACC,CAAC,CAAC;EACnB,OAAOJ,CAAC;AACZ,CAAC;AACDM,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,OAAO,GAAGF,OAAO,CAACG,cAAc,GAAG,KAAK,CAAC;AACjD,IAAIC,OAAO,GAAGC,OAAO,CAAC,SAAS,CAAC;AAChC,IAAIC,MAAM,GAAGD,OAAO,CAAC,QAAQ,CAAC;AAC9B;AACA;AACA;AACA,IAAIE,OAAO,GAAGF,OAAO,CAAC,SAAS,CAAC;AAChCP,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,QAAQ,EAAE;EAAEQ,UAAU,EAAE,IAAI;EAAEC,GAAG,EAAE,SAAAA,CAAA,EAAY;IAAE,OAAOF,OAAO,CAACG,MAAM;EAAE;AAAE,CAAC,CAAC;AAC3GZ,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,WAAW,EAAE;EAAEQ,UAAU,EAAE,IAAI;EAAEC,GAAG,EAAE,SAAAA,CAAA,EAAY;IAAE,OAAOF,OAAO,CAACI,SAAS;EAAE;AAAE,CAAC,CAAC;AACjHb,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,cAAc,EAAE;EAAEQ,UAAU,EAAE,IAAI;EAAEC,GAAG,EAAE,SAAAA,CAAA,EAAY;IAAE,OAAOF,OAAO,CAACK,YAAY;EAAE;AAAE,CAAC,CAAC;AACvHd,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,OAAO,EAAE;EAAEQ,UAAU,EAAE,IAAI;EAAEC,GAAG,EAAE,SAAAA,CAAA,EAAY;IAAE,OAAOF,OAAO,CAACM,KAAK;EAAE;AAAE,CAAC,CAAC;AACzGf,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,QAAQ,EAAE;EAAEQ,UAAU,EAAE,IAAI;EAAEC,GAAG,EAAE,SAAAA,CAAA,EAAY;IAAE,OAAOF,OAAO,CAACO,MAAM;EAAE;AAAE,CAAC,CAAC;AAC3GhB,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,UAAU,EAAE;EAAEQ,UAAU,EAAE,IAAI;EAAEC,GAAG,EAAE,SAAAA,CAAA,EAAY;IAAE,OAAOF,OAAO,CAACQ,QAAQ;EAAE;AAAE,CAAC,CAAC;AAC/GjB,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,OAAO,EAAE;EAAEQ,UAAU,EAAE,IAAI;EAAEC,GAAG,EAAE,SAAAA,CAAA,EAAY;IAAE,OAAOF,OAAO,CAACS,KAAK;EAAE;AAAE,CAAC,CAAC;AACzGlB,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,WAAW,EAAE;EAAEQ,UAAU,EAAE,IAAI;EAAEC,GAAG,EAAE,SAAAA,CAAA,EAAY;IAAE,OAAOF,OAAO,CAACU,SAAS;EAAE;AAAE,CAAC,CAAC;AACjHnB,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,QAAQ,EAAE;EAAEQ,UAAU,EAAE,IAAI;EAAEC,GAAG,EAAE,SAAAA,CAAA,EAAY;IAAE,OAAOF,OAAO,CAACW,MAAM;EAAE;AAAE,CAAC,CAAC;AAC3GpB,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEQ,UAAU,EAAE,IAAI;EAAEC,GAAG,EAAE,SAAAA,CAAA,EAAY;IAAE,OAAOF,OAAO,CAACY,UAAU;EAAE;AAAE,CAAC,CAAC;AACnHrB,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,OAAO,EAAE;EAAEQ,UAAU,EAAE,IAAI;EAAEC,GAAG,EAAE,SAAAA,CAAA,EAAY;IAAE,OAAOF,OAAO,CAACa,KAAK;EAAE;AAAE,CAAC,CAAC;AACzGtB,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,QAAQ,EAAE;EAAEQ,UAAU,EAAE,IAAI;EAAEC,GAAG,EAAE,SAAAA,CAAA,EAAY;IAAE,OAAOF,OAAO,CAACc,MAAM;EAAE;AAAE,CAAC,CAAC;AAC3GvB,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,OAAO,EAAE;EAAEQ,UAAU,EAAE,IAAI;EAAEC,GAAG,EAAE,SAAAA,CAAA,EAAY;IAAE,OAAOF,OAAO,CAACe,KAAK;EAAE;AAAE,CAAC,CAAC;AACzGxB,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,QAAQ,EAAE;EAAEQ,UAAU,EAAE,IAAI;EAAEC,GAAG,EAAE,SAAAA,CAAA,EAAY;IAAE,OAAOF,OAAO,CAACgB,MAAM;EAAE;AAAE,CAAC,CAAC;AAC3GzB,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,eAAe,EAAE;EAAEQ,UAAU,EAAE,IAAI;EAAEC,GAAG,EAAE,SAAAA,CAAA,EAAY;IAAE,OAAOF,OAAO,CAACiB,aAAa;EAAE;AAAE,CAAC,CAAC;AACzH1B,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,OAAO,EAAE;EAAEQ,UAAU,EAAE,IAAI;EAAEC,GAAG,EAAE,SAAAA,CAAA,EAAY;IAAE,OAAOF,OAAO,CAACkB,KAAK;EAAE;AAAE,CAAC,CAAC;AACzG3B,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,SAAS,EAAE;EAAEQ,UAAU,EAAE,IAAI;EAAEC,GAAG,EAAE,SAAAA,CAAA,EAAY;IAAE,OAAOF,OAAO,CAACmB,OAAO;EAAE;AAAE,CAAC,CAAC;AAC7G5B,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,UAAU,EAAE;EAAEQ,UAAU,EAAE,IAAI;EAAEC,GAAG,EAAE,SAAAA,CAAA,EAAY;IAAE,OAAOF,OAAO,CAACoB,QAAQ;EAAE;AAAE,CAAC,CAAC;AAC/G7B,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,MAAM,EAAE;EAAEQ,UAAU,EAAE,IAAI;EAAEC,GAAG,EAAE,SAAAA,CAAA,EAAY;IAAE,OAAOF,OAAO,CAACqB,IAAI;EAAE;AAAE,CAAC,CAAC;AACvG9B,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,OAAO,EAAE;EAAEQ,UAAU,EAAE,IAAI;EAAEC,GAAG,EAAE,SAAAA,CAAA,EAAY;IAAE,OAAOF,OAAO,CAACsB,KAAK;EAAE;AAAE,CAAC,CAAC;AACzG/B,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,KAAK,EAAE;EAAEQ,UAAU,EAAE,IAAI;EAAEC,GAAG,EAAE,SAAAA,CAAA,EAAY;IAAE,OAAOF,OAAO,CAACuB,GAAG;EAAE;AAAE,CAAC,CAAC;AACrGhC,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,MAAM,EAAE;EAAEQ,UAAU,EAAE,IAAI;EAAEC,GAAG,EAAE,SAAAA,CAAA,EAAY;IAAE,OAAOF,OAAO,CAACwB,IAAI;EAAE;AAAE,CAAC,CAAC;AACvGjC,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,KAAK,EAAE;EAAEQ,UAAU,EAAE,IAAI;EAAEC,GAAG,EAAE,SAAAA,CAAA,EAAY;IAAE,OAAOF,OAAO,CAACyB,GAAG;EAAE;AAAE,CAAC,CAAC;AACrGlC,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,OAAO,EAAE;EAAEQ,UAAU,EAAE,IAAI;EAAEC,GAAG,EAAE,SAAAA,CAAA,EAAY;IAAE,OAAOF,OAAO,CAAC0B,KAAK;EAAE;AAAE,CAAC,CAAC;AACzGnC,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,OAAO,EAAE;EAAEQ,UAAU,EAAE,IAAI;EAAEC,GAAG,EAAE,SAAAA,CAAA,EAAY;IAAE,OAAOF,OAAO,CAAC2B,KAAK;EAAE;AAAE,CAAC,CAAC;AACzGpC,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,OAAO,EAAE;EAAEQ,UAAU,EAAE,IAAI;EAAEC,GAAG,EAAE,SAAAA,CAAA,EAAY;IAAE,OAAOF,OAAO,CAAC4B,KAAK;EAAE;AAAE,CAAC,CAAC;AACzGrC,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,cAAc,EAAE;EAAEQ,UAAU,EAAE,IAAI;EAAEC,GAAG,EAAE,SAAAA,CAAA,EAAY;IAAE,OAAOF,OAAO,CAAC6B,YAAY;EAAE;AAAE,CAAC,CAAC;AACvHtC,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,WAAW,EAAE;EAAEQ,UAAU,EAAE,IAAI;EAAEC,GAAG,EAAE,SAAAA,CAAA,EAAY;IAAE,OAAOF,OAAO,CAAC8B,SAAS;EAAE;AAAE,CAAC,CAAC;AACjH,IAAIC,MAAM,GAAGjC,OAAO,CAAC,QAAQ,CAAC;AAC9BP,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,QAAQ,EAAE;EAAEQ,UAAU,EAAE,IAAI;EAAEC,GAAG,EAAE,SAAAA,CAAA,EAAY;IAAE,OAAO6B,MAAM,CAACC,MAAM;EAAE;AAAE,CAAC,CAAC;AAC1G;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASpC,cAAcA,CAAA,EAAG;EACtB,IAAIqC,SAAS,GAAG,EAAE;EAClB,KAAK,IAAIC,EAAE,GAAG,CAAC,EAAEA,EAAE,GAAGnD,SAAS,CAACC,MAAM,EAAEkD,EAAE,EAAE,EAAE;IAC1CD,SAAS,CAACC,EAAE,CAAC,GAAGnD,SAAS,CAACmD,EAAE,CAAC;EACjC;EACA,IAAIC,SAAS,GAAG5C,MAAM,CAAC6C,MAAM,CAACC,KAAK,CAAC9C,MAAM,EAAEZ,cAAc,CAAC,CAAC,CAAC,CAAC,EAAEkB,OAAO,CAACyC,UAAU,CAAC,EAAEL,SAAS,CAAC,CAAC;EAChG,IAAIM,QAAQ,GAAG,CAAC,CAAC;EACjB,KAAK,IAAIC,EAAE,GAAG,CAAC,EAAEC,WAAW,GAAGR,SAAS,EAAEO,EAAE,GAAGC,WAAW,CAACzD,MAAM,EAAEwD,EAAE,EAAE,EAAE;IACrE,IAAIE,OAAO,GAAGD,WAAW,CAACD,EAAE,CAAC;IAC7B,KAAK,IAAIG,EAAE,GAAG,CAAC,EAAEC,EAAE,GAAGrD,MAAM,CAACsD,IAAI,CAACH,OAAO,CAAC,EAAEC,EAAE,GAAGC,EAAE,CAAC5D,MAAM,EAAE2D,EAAE,EAAE,EAAE;MAC9D,IAAInB,IAAI,GAAGoB,EAAE,CAACD,EAAE,CAAC;MACjBJ,QAAQ,CAACf,IAAI,CAAC,GAAG,IAAI7B,OAAO,CAACwC,SAAS,EAAEO,OAAO,CAAClB,IAAI,CAAC,CAAC;IAC1D;EACJ;EACA,OAAOe,QAAQ;AACnB;AACA9C,OAAO,CAACG,cAAc,GAAGA,cAAc;AACvC;AACA;AACA;AACA;AACA,IAAID,OAAO,GAAG,aAAe,YAAY;EACrC;EACA,SAASA,OAAOA,CAACmD,KAAK,EAAEC,KAAK,EAAEC,KAAK,EAAE;IAClC,IAAIA,KAAK,KAAK,KAAK,CAAC,EAAE;MAAEA,KAAK,GAAG,OAAO;IAAE;IACzC,IAAI,CAACF,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACC,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACC,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACC,KAAK,GAAG,IAAIC,GAAG,CAAC,CAAC;IACtB,IAAIH,KAAK,YAAYlD,OAAO,CAACU,MAAM,EAAE;MACjC,KAAK,IAAI2B,EAAE,GAAG,CAAC,EAAEM,EAAE,GAAGO,KAAK,CAACE,KAAK,EAAEf,EAAE,GAAGM,EAAE,CAACxD,MAAM,EAAEkD,EAAE,EAAE,EAAE;QACrD,IAAIiB,CAAC,GAAGX,EAAE,CAACN,EAAE,CAAC;QACd,IAAI,CAACe,KAAK,CAACG,GAAG,CAACD,CAAC,CAAC3B,IAAI,EAAE2B,CAAC,CAACJ,KAAK,CAAC;MACnC;IACJ;IACA,IAAI,CAACM,YAAY,GAAG,IAAI,CAACN,KAAK,CAACO,UAAU,CAACR,KAAK,EAAE,KAAK,CAAC;IACvD,IAAI,CAACS,aAAa,GAAG,IAAI,CAACR,KAAK,CAACO,UAAU,CAACR,KAAK,EAAE,IAAI,CAAC;EAC3D;EACA;AACJ;AACA;AACA;EACInD,OAAO,CAAC6D,SAAS,CAACC,eAAe,GAAG,UAAUC,IAAI,EAAE;IAChD,IAAI,CAACV,KAAK,GAAGU,IAAI;EACrB,CAAC;EACD;AACJ;AACA;EACI/D,OAAO,CAAC6D,SAAS,CAACG,KAAK,GAAG,UAAUjE,KAAK,EAAE;IAAE,OAAO,IAAI,CAACkE,QAAQ,CAAC,IAAI,CAACP,YAAY,EAAE3D,KAAK,CAAC;EAAE,CAAC;EAC9F;AACJ;AACA;AACA;EACIC,OAAO,CAAC6D,SAAS,CAACK,IAAI,GAAG,UAAUnE,KAAK,EAAE;IACtC,OAAO,IAAI,CAAC2D,YAAY,CAAC3D,KAAK,EAAE,IAAIK,MAAM,CAAC+D,WAAW,CAAC,CAAC,CAAC;EAC7D,CAAC;EACD;AACJ;AACA;AACA;EACInE,OAAO,CAAC6D,SAAS,CAACO,QAAQ,GAAG,UAAUrE,KAAK,EAAE;IAC1C,OAAO,IAAI,CAACsE,WAAW,CAAC,IAAI,CAACX,YAAY,EAAE3D,KAAK,CAAC;EACrD,CAAC;EACD;AACJ;AACA;AACA;AACA;EACIC,OAAO,CAAC6D,SAAS,CAACS,WAAW,GAAG,UAAUvE,KAAK,EAAE;IAAE,OAAO,IAAI,CAACkE,QAAQ,CAAC,IAAI,CAACL,aAAa,EAAE7D,KAAK,CAAC;EAAE,CAAC;EACrG;AACJ;AACA;AACA;EACIC,OAAO,CAAC6D,SAAS,CAACU,UAAU,GAAG,UAAUxE,KAAK,EAAE;IAC5C,OAAO,IAAI,CAAC6D,aAAa,CAAC7D,KAAK,EAAE,IAAIK,MAAM,CAAC+D,WAAW,CAAC,CAAC,CAAC;EAC9D,CAAC;EACD;AACJ;AACA;AACA;EACInE,OAAO,CAAC6D,SAAS,CAACW,cAAc,GAAG,UAAUzE,KAAK,EAAE;IAChD,OAAO,IAAI,CAACsE,WAAW,CAAC,IAAI,CAACT,aAAa,EAAE7D,KAAK,CAAC;EACtD,CAAC;EACD;AACJ;AACA;AACA;EACIC,OAAO,CAAC6D,SAAS,CAACY,OAAO,GAAG,UAAUC,IAAI,EAAE;IACxC,IAAItB,KAAK,GAAG,IAAI,CAACE,KAAK,CAAC/C,GAAG,CAACmE,IAAI,CAAC;IAChC,IAAI,CAACtB,KAAK,EAAE;MACR,MAAM,IAAIuB,KAAK,CAAC,uBAAuB,GAAGD,IAAI,CAAC;IACnD;IACA,OAAO,IAAI1E,OAAO,CAAC,IAAI,CAACmD,KAAK,EAAEC,KAAK,EAAE,IAAI,CAACC,KAAK,GAAG,GAAG,GAAGqB,IAAI,CAAC;EAClE,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACI1E,OAAO,CAAC6D,SAAS,CAACe,UAAU,GAAG,UAAUC,UAAU,EAAE;IACjD,IAAIC,KAAK,GAAG,IAAI,CAACC,UAAU,CAACF,UAAU,CAAC;IACvC,OAAO,IAAI7E,OAAO,CAAC,IAAI,CAACmD,KAAK,EAAE2B,KAAK,CAACE,SAAS,CAAC;EACnD,CAAC;EACD;AACJ;AACA;AACA;EACIhF,OAAO,CAAC6D,SAAS,CAACoB,YAAY,GAAG,UAAUJ,UAAU,EAAE;IACnD,IAAIC,KAAK,GAAG,IAAI,CAACC,UAAU,CAACF,UAAU,CAAC;IACvC,OAAO,IAAI7E,OAAO,CAAC,IAAI,CAACmD,KAAK,EAAE2B,KAAK,CAACI,MAAM,CAAC;EAChD,CAAC;EACD;AACJ;AACA;EACIlF,OAAO,CAAC6D,SAAS,CAACsB,OAAO,GAAG,YAAY;IACpC,IAAI,EAAE,IAAI,CAAC/B,KAAK,YAAYlD,OAAO,CAACS,KAAK,CAAC,EAAE;MACxC,MAAM,IAAIgE,KAAK,CAAC,mCAAmC,CAAC;IACxD;IACA,OAAO,IAAI3E,OAAO,CAAC,IAAI,CAACmD,KAAK,EAAE,IAAI,CAACC,KAAK,CAAC4B,SAAS,CAAC;EACxD,CAAC;EACD;AACJ;AACA;EACIhF,OAAO,CAAC6D,SAAS,CAACuB,SAAS,GAAG,YAAY;IACtC,IAAI,EAAE,IAAI,CAAChC,KAAK,YAAYlD,OAAO,CAACS,KAAK,CAAC,EAAE;MACxC,MAAM,IAAIgE,KAAK,CAAC,qCAAqC,CAAC;IAC1D;IACA,OAAO,IAAI3E,OAAO,CAAC,IAAI,CAACmD,KAAK,EAAE,IAAI,CAACC,KAAK,CAAC8B,MAAM,CAAC;EACrD,CAAC;EACD;AACJ;AACA;EACIlF,OAAO,CAAC6D,SAAS,CAACwB,OAAO,GAAG,YAAY;IACpC,OAAO,IAAI,CAACjC,KAAK;EACrB,CAAC;EACD;AACJ;AACA;EACIpD,OAAO,CAAC6D,SAAS,CAACI,QAAQ,GAAG,UAAUqB,WAAW,EAAEvF,KAAK,EAAE;IACvD,IAAIwF,OAAO,GAAG,IAAInF,MAAM,CAAC+D,WAAW,CAAC,CAAC;IACtC,IAAI,CAACmB,WAAW,CAACvF,KAAK,EAAEwF,OAAO,CAAC,EAAE;MAC9B,IAAIC,SAAS,GAAG,IAAIpF,MAAM,CAACqF,aAAa,CAAC,CAAC;MAC1CH,WAAW,CAACvF,KAAK,EAAEyF,SAAS,CAAC;MAC7B,MAAMA,SAAS,CAACE,QAAQ,CAAC,IAAI,CAACrC,KAAK,CAAC;IACxC;EACJ,CAAC;EACDrD,OAAO,CAAC6D,SAAS,CAACQ,WAAW,GAAG,UAAUiB,WAAW,EAAEvF,KAAK,EAAE;IAC1D,IAAIwF,OAAO,GAAG,IAAInF,MAAM,CAAC+D,WAAW,CAAC,CAAC;IACtC,IAAImB,WAAW,CAACvF,KAAK,EAAEwF,OAAO,CAAC,EAAE;MAC7B,OAAO,IAAI;IACf;IACA,IAAIC,SAAS,GAAG,IAAIpF,MAAM,CAACqF,aAAa,CAAC,CAAC;IAC1CH,WAAW,CAACvF,KAAK,EAAEyF,SAAS,CAAC;IAC7B,OAAOA,SAAS,CAACG,cAAc,CAAC,IAAI,CAACtC,KAAK,CAAC;EAC/C,CAAC;EACDrD,OAAO,CAAC6D,SAAS,CAACkB,UAAU,GAAG,UAAUF,UAAU,EAAE;IACjD,IAAIzB,KAAK,GAAG,IAAI,CAACE,KAAK,CAAC/C,GAAG,CAACsE,UAAU,CAAC;IACtC,IAAI,CAACzB,KAAK,EAAE;MACR,MAAM,IAAIuB,KAAK,CAAC,uBAAuB,GAAGE,UAAU,CAAC;IACzD;IACA,IAAI,EAAEzB,KAAK,YAAYlD,OAAO,CAACS,KAAK,CAAC,EAAE;MACnC,MAAM,IAAIgE,KAAK,CAAC,WAAW,GAAGE,UAAU,GAAG,kBAAkB,CAAC;IAClE;IACA,OAAOzB,KAAK;EAChB,CAAC;EACD,OAAOpD,OAAO;AAClB,CAAC,CAAC,CAAE;AACJF,OAAO,CAACE,OAAO,GAAGA,OAAO"},"metadata":{},"sourceType":"script","externalDependencies":[]}