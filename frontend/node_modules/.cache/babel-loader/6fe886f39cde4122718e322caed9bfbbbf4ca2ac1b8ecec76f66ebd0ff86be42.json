{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst utils = require(\"../../utils\");\nclass EntryFilter {\n  constructor(_settings, _micromatchOptions) {\n    this._settings = _settings;\n    this._micromatchOptions = _micromatchOptions;\n    this.index = new Map();\n  }\n  getFilter(positive, negative) {\n    const positiveRe = utils.pattern.convertPatternsToRe(positive, this._micromatchOptions);\n    const negativeRe = utils.pattern.convertPatternsToRe(negative, Object.assign(Object.assign({}, this._micromatchOptions), {\n      dot: true\n    }));\n    return entry => this._filter(entry, positiveRe, negativeRe);\n  }\n  _filter(entry, positiveRe, negativeRe) {\n    const filepath = utils.path.removeLeadingDotSegment(entry.path);\n    if (this._settings.unique && this._isDuplicateEntry(filepath)) {\n      return false;\n    }\n    if (this._onlyFileFilter(entry) || this._onlyDirectoryFilter(entry)) {\n      return false;\n    }\n    if (this._isSkippedByAbsoluteNegativePatterns(filepath, negativeRe)) {\n      return false;\n    }\n    const isDirectory = entry.dirent.isDirectory();\n    const isMatched = this._isMatchToPatterns(filepath, positiveRe, isDirectory) && !this._isMatchToPatterns(filepath, negativeRe, isDirectory);\n    if (this._settings.unique && isMatched) {\n      this._createIndexRecord(filepath);\n    }\n    return isMatched;\n  }\n  _isDuplicateEntry(filepath) {\n    return this.index.has(filepath);\n  }\n  _createIndexRecord(filepath) {\n    this.index.set(filepath, undefined);\n  }\n  _onlyFileFilter(entry) {\n    return this._settings.onlyFiles && !entry.dirent.isFile();\n  }\n  _onlyDirectoryFilter(entry) {\n    return this._settings.onlyDirectories && !entry.dirent.isDirectory();\n  }\n  _isSkippedByAbsoluteNegativePatterns(entryPath, patternsRe) {\n    if (!this._settings.absolute) {\n      return false;\n    }\n    const fullpath = utils.path.makeAbsolute(this._settings.cwd, entryPath);\n    return utils.pattern.matchAny(fullpath, patternsRe);\n  }\n  _isMatchToPatterns(filepath, patternsRe, isDirectory) {\n    // Trying to match files and directories by patterns.\n    const isMatched = utils.pattern.matchAny(filepath, patternsRe);\n    // A pattern with a trailling slash can be used for directory matching.\n    // To apply such pattern, we need to add a tralling slash to the path.\n    if (!isMatched && isDirectory) {\n      return utils.pattern.matchAny(filepath + '/', patternsRe);\n    }\n    return isMatched;\n  }\n}\nexports.default = EntryFilter;","map":{"version":3,"names":["Object","defineProperty","exports","value","utils","require","EntryFilter","constructor","_settings","_micromatchOptions","index","Map","getFilter","positive","negative","positiveRe","pattern","convertPatternsToRe","negativeRe","assign","dot","entry","_filter","filepath","path","removeLeadingDotSegment","unique","_isDuplicateEntry","_onlyFileFilter","_onlyDirectoryFilter","_isSkippedByAbsoluteNegativePatterns","isDirectory","dirent","isMatched","_isMatchToPatterns","_createIndexRecord","has","set","undefined","onlyFiles","isFile","onlyDirectories","entryPath","patternsRe","absolute","fullpath","makeAbsolute","cwd","matchAny","default"],"sources":["D:/WEB-PROJECT/Schwarz/frontend/node_modules/fast-glob/out/providers/filters/entry.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst utils = require(\"../../utils\");\nclass EntryFilter {\n    constructor(_settings, _micromatchOptions) {\n        this._settings = _settings;\n        this._micromatchOptions = _micromatchOptions;\n        this.index = new Map();\n    }\n    getFilter(positive, negative) {\n        const positiveRe = utils.pattern.convertPatternsToRe(positive, this._micromatchOptions);\n        const negativeRe = utils.pattern.convertPatternsToRe(negative, Object.assign(Object.assign({}, this._micromatchOptions), { dot: true }));\n        return (entry) => this._filter(entry, positiveRe, negativeRe);\n    }\n    _filter(entry, positiveRe, negativeRe) {\n        const filepath = utils.path.removeLeadingDotSegment(entry.path);\n        if (this._settings.unique && this._isDuplicateEntry(filepath)) {\n            return false;\n        }\n        if (this._onlyFileFilter(entry) || this._onlyDirectoryFilter(entry)) {\n            return false;\n        }\n        if (this._isSkippedByAbsoluteNegativePatterns(filepath, negativeRe)) {\n            return false;\n        }\n        const isDirectory = entry.dirent.isDirectory();\n        const isMatched = this._isMatchToPatterns(filepath, positiveRe, isDirectory) && !this._isMatchToPatterns(filepath, negativeRe, isDirectory);\n        if (this._settings.unique && isMatched) {\n            this._createIndexRecord(filepath);\n        }\n        return isMatched;\n    }\n    _isDuplicateEntry(filepath) {\n        return this.index.has(filepath);\n    }\n    _createIndexRecord(filepath) {\n        this.index.set(filepath, undefined);\n    }\n    _onlyFileFilter(entry) {\n        return this._settings.onlyFiles && !entry.dirent.isFile();\n    }\n    _onlyDirectoryFilter(entry) {\n        return this._settings.onlyDirectories && !entry.dirent.isDirectory();\n    }\n    _isSkippedByAbsoluteNegativePatterns(entryPath, patternsRe) {\n        if (!this._settings.absolute) {\n            return false;\n        }\n        const fullpath = utils.path.makeAbsolute(this._settings.cwd, entryPath);\n        return utils.pattern.matchAny(fullpath, patternsRe);\n    }\n    _isMatchToPatterns(filepath, patternsRe, isDirectory) {\n        // Trying to match files and directories by patterns.\n        const isMatched = utils.pattern.matchAny(filepath, patternsRe);\n        // A pattern with a trailling slash can be used for directory matching.\n        // To apply such pattern, we need to add a tralling slash to the path.\n        if (!isMatched && isDirectory) {\n            return utils.pattern.matchAny(filepath + '/', patternsRe);\n        }\n        return isMatched;\n    }\n}\nexports.default = EntryFilter;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}