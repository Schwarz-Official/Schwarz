{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports.LinesAndColumns = void 0;\nvar LF = '\\n';\nvar CR = '\\r';\nvar LinesAndColumns = /** @class */function () {\n  function LinesAndColumns(string) {\n    this.string = string;\n    var offsets = [0];\n    for (var offset = 0; offset < string.length;) {\n      switch (string[offset]) {\n        case LF:\n          offset += LF.length;\n          offsets.push(offset);\n          break;\n        case CR:\n          offset += CR.length;\n          if (string[offset] === LF) {\n            offset += LF.length;\n          }\n          offsets.push(offset);\n          break;\n        default:\n          offset++;\n          break;\n      }\n    }\n    this.offsets = offsets;\n  }\n  LinesAndColumns.prototype.locationForIndex = function (index) {\n    if (index < 0 || index > this.string.length) {\n      return null;\n    }\n    var line = 0;\n    var offsets = this.offsets;\n    while (offsets[line + 1] <= index) {\n      line++;\n    }\n    var column = index - offsets[line];\n    return {\n      line: line,\n      column: column\n    };\n  };\n  LinesAndColumns.prototype.indexForLocation = function (location) {\n    var line = location.line,\n      column = location.column;\n    if (line < 0 || line >= this.offsets.length) {\n      return null;\n    }\n    if (column < 0 || column > this.lengthOfLine(line)) {\n      return null;\n    }\n    return this.offsets[line] + column;\n  };\n  LinesAndColumns.prototype.lengthOfLine = function (line) {\n    var offset = this.offsets[line];\n    var nextOffset = line === this.offsets.length - 1 ? this.string.length : this.offsets[line + 1];\n    return nextOffset - offset;\n  };\n  return LinesAndColumns;\n}();\nexports.LinesAndColumns = LinesAndColumns;\nexports[\"default\"] = LinesAndColumns;","map":{"version":3,"names":["exports","__esModule","LinesAndColumns","LF","CR","string","offsets","offset","length","push","prototype","locationForIndex","index","line","column","indexForLocation","location","lengthOfLine","nextOffset"],"sources":["D:/WEB-PROJECT/Schwarz/frontend/node_modules/lines-and-columns/build/index.js"],"sourcesContent":["\"use strict\";\nexports.__esModule = true;\nexports.LinesAndColumns = void 0;\nvar LF = '\\n';\nvar CR = '\\r';\nvar LinesAndColumns = /** @class */ (function () {\n    function LinesAndColumns(string) {\n        this.string = string;\n        var offsets = [0];\n        for (var offset = 0; offset < string.length;) {\n            switch (string[offset]) {\n                case LF:\n                    offset += LF.length;\n                    offsets.push(offset);\n                    break;\n                case CR:\n                    offset += CR.length;\n                    if (string[offset] === LF) {\n                        offset += LF.length;\n                    }\n                    offsets.push(offset);\n                    break;\n                default:\n                    offset++;\n                    break;\n            }\n        }\n        this.offsets = offsets;\n    }\n    LinesAndColumns.prototype.locationForIndex = function (index) {\n        if (index < 0 || index > this.string.length) {\n            return null;\n        }\n        var line = 0;\n        var offsets = this.offsets;\n        while (offsets[line + 1] <= index) {\n            line++;\n        }\n        var column = index - offsets[line];\n        return { line: line, column: column };\n    };\n    LinesAndColumns.prototype.indexForLocation = function (location) {\n        var line = location.line, column = location.column;\n        if (line < 0 || line >= this.offsets.length) {\n            return null;\n        }\n        if (column < 0 || column > this.lengthOfLine(line)) {\n            return null;\n        }\n        return this.offsets[line] + column;\n    };\n    LinesAndColumns.prototype.lengthOfLine = function (line) {\n        var offset = this.offsets[line];\n        var nextOffset = line === this.offsets.length - 1\n            ? this.string.length\n            : this.offsets[line + 1];\n        return nextOffset - offset;\n    };\n    return LinesAndColumns;\n}());\nexports.LinesAndColumns = LinesAndColumns;\nexports[\"default\"] = LinesAndColumns;\n"],"mappings":"AAAA,YAAY;;AACZA,OAAO,CAACC,UAAU,GAAG,IAAI;AACzBD,OAAO,CAACE,eAAe,GAAG,KAAK,CAAC;AAChC,IAAIC,EAAE,GAAG,IAAI;AACb,IAAIC,EAAE,GAAG,IAAI;AACb,IAAIF,eAAe,GAAG,aAAe,YAAY;EAC7C,SAASA,eAAeA,CAACG,MAAM,EAAE;IAC7B,IAAI,CAACA,MAAM,GAAGA,MAAM;IACpB,IAAIC,OAAO,GAAG,CAAC,CAAC,CAAC;IACjB,KAAK,IAAIC,MAAM,GAAG,CAAC,EAAEA,MAAM,GAAGF,MAAM,CAACG,MAAM,GAAG;MAC1C,QAAQH,MAAM,CAACE,MAAM,CAAC;QAClB,KAAKJ,EAAE;UACHI,MAAM,IAAIJ,EAAE,CAACK,MAAM;UACnBF,OAAO,CAACG,IAAI,CAACF,MAAM,CAAC;UACpB;QACJ,KAAKH,EAAE;UACHG,MAAM,IAAIH,EAAE,CAACI,MAAM;UACnB,IAAIH,MAAM,CAACE,MAAM,CAAC,KAAKJ,EAAE,EAAE;YACvBI,MAAM,IAAIJ,EAAE,CAACK,MAAM;UACvB;UACAF,OAAO,CAACG,IAAI,CAACF,MAAM,CAAC;UACpB;QACJ;UACIA,MAAM,EAAE;UACR;MACR;IACJ;IACA,IAAI,CAACD,OAAO,GAAGA,OAAO;EAC1B;EACAJ,eAAe,CAACQ,SAAS,CAACC,gBAAgB,GAAG,UAAUC,KAAK,EAAE;IAC1D,IAAIA,KAAK,GAAG,CAAC,IAAIA,KAAK,GAAG,IAAI,CAACP,MAAM,CAACG,MAAM,EAAE;MACzC,OAAO,IAAI;IACf;IACA,IAAIK,IAAI,GAAG,CAAC;IACZ,IAAIP,OAAO,GAAG,IAAI,CAACA,OAAO;IAC1B,OAAOA,OAAO,CAACO,IAAI,GAAG,CAAC,CAAC,IAAID,KAAK,EAAE;MAC/BC,IAAI,EAAE;IACV;IACA,IAAIC,MAAM,GAAGF,KAAK,GAAGN,OAAO,CAACO,IAAI,CAAC;IAClC,OAAO;MAAEA,IAAI,EAAEA,IAAI;MAAEC,MAAM,EAAEA;IAAO,CAAC;EACzC,CAAC;EACDZ,eAAe,CAACQ,SAAS,CAACK,gBAAgB,GAAG,UAAUC,QAAQ,EAAE;IAC7D,IAAIH,IAAI,GAAGG,QAAQ,CAACH,IAAI;MAAEC,MAAM,GAAGE,QAAQ,CAACF,MAAM;IAClD,IAAID,IAAI,GAAG,CAAC,IAAIA,IAAI,IAAI,IAAI,CAACP,OAAO,CAACE,MAAM,EAAE;MACzC,OAAO,IAAI;IACf;IACA,IAAIM,MAAM,GAAG,CAAC,IAAIA,MAAM,GAAG,IAAI,CAACG,YAAY,CAACJ,IAAI,CAAC,EAAE;MAChD,OAAO,IAAI;IACf;IACA,OAAO,IAAI,CAACP,OAAO,CAACO,IAAI,CAAC,GAAGC,MAAM;EACtC,CAAC;EACDZ,eAAe,CAACQ,SAAS,CAACO,YAAY,GAAG,UAAUJ,IAAI,EAAE;IACrD,IAAIN,MAAM,GAAG,IAAI,CAACD,OAAO,CAACO,IAAI,CAAC;IAC/B,IAAIK,UAAU,GAAGL,IAAI,KAAK,IAAI,CAACP,OAAO,CAACE,MAAM,GAAG,CAAC,GAC3C,IAAI,CAACH,MAAM,CAACG,MAAM,GAClB,IAAI,CAACF,OAAO,CAACO,IAAI,GAAG,CAAC,CAAC;IAC5B,OAAOK,UAAU,GAAGX,MAAM;EAC9B,CAAC;EACD,OAAOL,eAAe;AAC1B,CAAC,CAAC,CAAE;AACJF,OAAO,CAACE,eAAe,GAAGA,eAAe;AACzCF,OAAO,CAAC,SAAS,CAAC,GAAGE,eAAe"},"metadata":{},"sourceType":"script","externalDependencies":[]}