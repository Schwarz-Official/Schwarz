{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"hasContentChanged\", {\n  enumerable: true,\n  get: function () {\n    return hasContentChanged;\n  }\n});\nconst _crypto = /*#__PURE__*/_interop_require_default(require(\"crypto\"));\nconst _sharedState = /*#__PURE__*/_interop_require_wildcard(require(\"./sharedState\"));\nfunction _interop_require_default(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== \"function\") return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function (nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\nfunction _interop_require_wildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n  if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n  var cache = _getRequireWildcardCache(nodeInterop);\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n  for (var key in obj) {\n    if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n  newObj.default = obj;\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n  return newObj;\n}\n/**\n * Calculate the hash of a string.\n *\n * This doesn't need to be cryptographically secure or\n * anything like that since it's used only to detect\n * when the CSS changes to invalidate the context.\n *\n * This is wrapped in a try/catch because it's really dependent\n * on how Node itself is build and the environment and OpenSSL\n * version / build that is installed on the user's machine.\n *\n * Based on the environment this can just outright fail.\n *\n * See https://github.com/nodejs/node/issues/40455\n *\n * @param {string} str\n */\nfunction getHash(str) {\n  try {\n    return _crypto.default.createHash(\"md5\").update(str, \"utf-8\").digest(\"binary\");\n  } catch (err) {\n    return \"\";\n  }\n}\nfunction hasContentChanged(sourcePath, root) {\n  let css = root.toString();\n  // We only care about files with @tailwind directives\n  // Other files use an existing context\n  if (!css.includes(\"@tailwind\")) {\n    return false;\n  }\n  let existingHash = _sharedState.sourceHashMap.get(sourcePath);\n  let rootHash = getHash(css);\n  let didChange = existingHash !== rootHash;\n  _sharedState.sourceHashMap.set(sourcePath, rootHash);\n  return didChange;\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","enumerable","get","hasContentChanged","_crypto","_interop_require_default","require","_sharedState","_interop_require_wildcard","obj","__esModule","default","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","cache","has","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","getHash","str","createHash","update","digest","err","sourcePath","root","css","toString","includes","existingHash","sourceHashMap","rootHash","didChange"],"sources":["D:/WEB-PROJECT/Schwarz/frontend/node_modules/tailwindcss/lib/lib/cacheInvalidation.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nObject.defineProperty(exports, \"hasContentChanged\", {\n    enumerable: true,\n    get: function() {\n        return hasContentChanged;\n    }\n});\nconst _crypto = /*#__PURE__*/ _interop_require_default(require(\"crypto\"));\nconst _sharedState = /*#__PURE__*/ _interop_require_wildcard(require(\"./sharedState\"));\nfunction _interop_require_default(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\nfunction _getRequireWildcardCache(nodeInterop) {\n    if (typeof WeakMap !== \"function\") return null;\n    var cacheBabelInterop = new WeakMap();\n    var cacheNodeInterop = new WeakMap();\n    return (_getRequireWildcardCache = function(nodeInterop) {\n        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n    })(nodeInterop);\n}\nfunction _interop_require_wildcard(obj, nodeInterop) {\n    if (!nodeInterop && obj && obj.__esModule) {\n        return obj;\n    }\n    if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n        return {\n            default: obj\n        };\n    }\n    var cache = _getRequireWildcardCache(nodeInterop);\n    if (cache && cache.has(obj)) {\n        return cache.get(obj);\n    }\n    var newObj = {};\n    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n    for(var key in obj){\n        if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n            if (desc && (desc.get || desc.set)) {\n                Object.defineProperty(newObj, key, desc);\n            } else {\n                newObj[key] = obj[key];\n            }\n        }\n    }\n    newObj.default = obj;\n    if (cache) {\n        cache.set(obj, newObj);\n    }\n    return newObj;\n}\n/**\n * Calculate the hash of a string.\n *\n * This doesn't need to be cryptographically secure or\n * anything like that since it's used only to detect\n * when the CSS changes to invalidate the context.\n *\n * This is wrapped in a try/catch because it's really dependent\n * on how Node itself is build and the environment and OpenSSL\n * version / build that is installed on the user's machine.\n *\n * Based on the environment this can just outright fail.\n *\n * See https://github.com/nodejs/node/issues/40455\n *\n * @param {string} str\n */ function getHash(str) {\n    try {\n        return _crypto.default.createHash(\"md5\").update(str, \"utf-8\").digest(\"binary\");\n    } catch (err) {\n        return \"\";\n    }\n}\nfunction hasContentChanged(sourcePath, root) {\n    let css = root.toString();\n    // We only care about files with @tailwind directives\n    // Other files use an existing context\n    if (!css.includes(\"@tailwind\")) {\n        return false;\n    }\n    let existingHash = _sharedState.sourceHashMap.get(sourcePath);\n    let rootHash = getHash(css);\n    let didChange = existingHash !== rootHash;\n    _sharedState.sourceHashMap.set(sourcePath, rootHash);\n    return didChange;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}